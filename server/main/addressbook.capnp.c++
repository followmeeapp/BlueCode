// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: addressbook.capnp

#include "main/addressbook.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<95> b_cde825d9fddd1f19 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25,  31, 221, 253, 217,  37, 232, 205,
     18,   0,   0,   0,   1,   0,   1,   0,
    175, 183,  20,  49, 131,  73, 116, 191,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  80, 101, 114, 115, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     21, 133, 207, 142, 158,  75,  68, 184,
      1,   0,   0,   0,  98,   0,   0,   0,
     80, 104, 111, 110, 101,  78, 117, 109,
     98, 101, 114,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     66, 135, 130,  12,  41,  56, 227, 213,
    157,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109,  97, 105, 108,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 104, 111, 110, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     21, 133, 207, 142, 158,  75,  68, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109, 112, 108, 111, 121, 109, 101,
    110, 116,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cde825d9fddd1f19 = b_cde825d9fddd1f19.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cde825d9fddd1f19[] = {
  &s_b8444b9e8ecf8515,
  &s_d5e338290c828742,
};
static const uint16_t m_cde825d9fddd1f19[] = {2, 4, 0, 1, 3};
static const uint16_t i_cde825d9fddd1f19[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_cde825d9fddd1f19 = {
  0xcde825d9fddd1f19, b_cde825d9fddd1f19.words, 95, d_cde825d9fddd1f19, m_cde825d9fddd1f19,
  2, 5, i_cde825d9fddd1f19, nullptr, nullptr, { &s_cde825d9fddd1f19, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_b8444b9e8ecf8515 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     21, 133, 207, 142, 158,  75,  68, 184,
     25,   0,   0,   0,   1,   0,   1,   0,
     25,  31, 221, 253, 217,  37, 232, 205,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  80, 101, 114, 115, 111, 110,
     46,  80, 104, 111, 110, 101,  78, 117,
    109,  98, 101, 114,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    174, 185,  98,  34, 152, 226, 203, 241,
      1,   0,   0,   0,  42,   0,   0,   0,
     84, 121, 112, 101,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110, 117, 109,  98, 101, 114,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    174, 185,  98,  34, 152, 226, 203, 241,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b8444b9e8ecf8515 = b_b8444b9e8ecf8515.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b8444b9e8ecf8515[] = {
  &s_f1cbe2982262b9ae,
};
static const uint16_t m_b8444b9e8ecf8515[] = {0, 1};
static const uint16_t i_b8444b9e8ecf8515[] = {0, 1};
const ::capnp::_::RawSchema s_b8444b9e8ecf8515 = {
  0xb8444b9e8ecf8515, b_b8444b9e8ecf8515.words, 52, d_b8444b9e8ecf8515, m_b8444b9e8ecf8515,
  1, 2, i_b8444b9e8ecf8515, nullptr, nullptr, { &s_b8444b9e8ecf8515, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_f1cbe2982262b9ae = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    174, 185,  98,  34, 152, 226, 203, 241,
     37,   0,   0,   0,   2,   0,   0,   0,
     21, 133, 207, 142, 158,  75,  68, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  80, 101, 114, 115, 111, 110,
     46,  80, 104, 111, 110, 101,  78, 117,
    109,  98, 101, 114,  46,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111,  98, 105, 108, 101,   0,   0,
    104, 111, 109, 101,   0,   0,   0,   0,
    119, 111, 114, 107,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f1cbe2982262b9ae = b_f1cbe2982262b9ae.words;
#if !CAPNP_LITE
static const uint16_t m_f1cbe2982262b9ae[] = {1, 0, 2};
const ::capnp::_::RawSchema s_f1cbe2982262b9ae = {
  0xf1cbe2982262b9ae, b_f1cbe2982262b9ae.words, 32, nullptr, m_f1cbe2982262b9ae,
  0, 3, nullptr, nullptr, nullptr, { &s_f1cbe2982262b9ae, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Type_f1cbe2982262b9ae, f1cbe2982262b9ae);
static const ::capnp::_::AlignedData<81> b_d5e338290c828742 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     66, 135, 130,  12,  41,  56, 227, 213,
     25,   0,   0,   0,   1,   0,   1,   0,
     25,  31, 221, 253, 217,  37, 232, 205,
      4,   0,   7,   0,   1,   0,   4,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  80, 101, 114, 115, 111, 110,
     46, 101, 109, 112, 108, 111, 121, 109,
    101, 110, 116,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
    117, 110, 101, 109, 112, 108, 111, 121,
    101, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109, 112, 108, 111, 121, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 104, 111, 111, 108,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 108, 102,  69, 109, 112, 108,
    111, 121, 101, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d5e338290c828742 = b_d5e338290c828742.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d5e338290c828742[] = {
  &s_cde825d9fddd1f19,
};
static const uint16_t m_d5e338290c828742[] = {1, 2, 3, 0};
static const uint16_t i_d5e338290c828742[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d5e338290c828742 = {
  0xd5e338290c828742, b_d5e338290c828742.words, 81, d_d5e338290c828742, m_d5e338290c828742,
  1, 4, i_d5e338290c828742, nullptr, nullptr, { &s_d5e338290c828742, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_c92f42c68b97b420 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     32, 180, 151, 139, 198,  66,  47, 201,
     18,   0,   0,   0,   1,   0,   0,   0,
    175, 183,  20,  49, 131,  73, 116, 191,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  65, 100, 100, 114, 101, 115,
    115,  66, 111, 111, 107,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    112, 101, 111, 112, 108, 101,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     25,  31, 221, 253, 217,  37, 232, 205,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c92f42c68b97b420 = b_c92f42c68b97b420.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c92f42c68b97b420[] = {
  &s_cde825d9fddd1f19,
};
static const uint16_t m_c92f42c68b97b420[] = {0};
static const uint16_t i_c92f42c68b97b420[] = {0};
const ::capnp::_::RawSchema s_c92f42c68b97b420 = {
  0xc92f42c68b97b420, b_c92f42c68b97b420.words, 37, d_c92f42c68b97b420, m_c92f42c68b97b420,
  1, 1, i_c92f42c68b97b420, nullptr, nullptr, { &s_c92f42c68b97b420, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Person
constexpr uint16_t Person::_capnpPrivate::dataWordSize;
constexpr uint16_t Person::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Person::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Person::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Person::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Person::PhoneNumber
constexpr uint16_t Person::PhoneNumber::_capnpPrivate::dataWordSize;
constexpr uint16_t Person::PhoneNumber::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Person::PhoneNumber::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Person::PhoneNumber::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Person::PhoneNumber::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Person::Employment
constexpr uint16_t Person::Employment::_capnpPrivate::dataWordSize;
constexpr uint16_t Person::Employment::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Person::Employment::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Person::Employment::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Person::Employment::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// AddressBook
constexpr uint16_t AddressBook::_capnpPrivate::dataWordSize;
constexpr uint16_t AddressBook::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind AddressBook::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AddressBook::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* AddressBook::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



