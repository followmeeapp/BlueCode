// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: response.capnp

#include "response.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<40> b_ccd2d3e745ef932b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     43, 147, 239,  69, 231, 211, 210, 204,
     15,   0,   0,   0,   1,   0,   2,   0,
     52, 165,  30, 131, 231, 203,  44, 175,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
     46,  99,  97, 112, 110, 112,  58,  82,
    101, 115, 112, 111, 110, 115, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    143, 222,   5,  60, 198, 119, 203, 202,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 110, 100,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ccd2d3e745ef932b = b_ccd2d3e745ef932b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ccd2d3e745ef932b[] = {
  &s_cacb77c63c05de8f,
};
static const uint16_t m_ccd2d3e745ef932b[] = {0, 1};
static const uint16_t i_ccd2d3e745ef932b[] = {0, 1};
const ::capnp::_::RawSchema s_ccd2d3e745ef932b = {
  0xccd2d3e745ef932b, b_ccd2d3e745ef932b.words, 40, d_ccd2d3e745ef932b, m_ccd2d3e745ef932b,
  1, 2, i_ccd2d3e745ef932b, nullptr, nullptr, { &s_ccd2d3e745ef932b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<162> b_cacb77c63c05de8f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    143, 222,   5,  60, 198, 119, 203, 202,
     24,   0,   0,   0,   1,   0,   2,   0,
     43, 147, 239,  69, 231, 211, 210, 204,
      1,   0,   7,   0,   1,   0,   9,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 255,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 112, 111, 110, 115, 101,
     46,  99,  97, 112, 110, 112,  58,  82,
    101, 115, 112, 111, 110, 115, 101,  46,
    107, 105, 110, 100,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    248,   0,   0,   0,   3,   0,   1,   0,
      4,   1,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   1,   0,   0,   3,   0,   1,   0,
     12,   1,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   1,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   1,   0,   0,   3,   0,   1,   0,
     24,   1,   0,   0,   2,   0,   1,   0,
      5,   0, 250, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   1,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   1,   0,   0,   3,   0,   1,   0,
     32,   1,   0,   0,   2,   0,   1,   0,
      6,   0, 249, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   1,   0,   0,   3,   0,   1,   0,
     40,   1,   0,   0,   2,   0,   1,   0,
      7,   0, 248, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   1,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   1,   0,   0,   3,   0,   1,   0,
     52,   1,   0,   0,   2,   0,   1,   0,
      8,   0, 247, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   1,   0,   0,   3,   0,   1,   0,
     60,   1,   0,   0,   2,   0,   1,   0,
    117, 110, 107, 110, 111, 119, 110,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111,  99, 101, 115, 115, 105,
    110, 103,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 114, 114, 111, 114,  82, 101, 115,
    112, 111, 110, 115, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     13,  86, 189, 149, 254, 130, 239, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 114, 100,  82, 101, 115, 112,
    111, 110, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    135, 239, 161, 198, 184,  23,  69, 161,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111, 118, 101, 114,
    121,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    250,  90, 108, 215, 135, 117,   7, 201,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101, 108, 108, 111,  82, 101, 115,
    112, 111, 110, 115, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     85,  36, 234, 139, 122,  67,  15, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106, 111, 105, 110,  82, 101, 115, 112,
    111, 110, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,  87,  11,  78,  12,  58, 175, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  76, 105,
    115, 116,  82, 101, 115, 112, 111, 110,
    115, 101,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    132,  78, 225, 210, 148, 213, 196, 232,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  82, 101,
    115, 112, 111, 110, 115, 101,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     47,  66, 200, 111, 115,  39,  95, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cacb77c63c05de8f = b_cacb77c63c05de8f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cacb77c63c05de8f[] = {
  &s_a14517b8c6a1ef87,
  &s_ad5f27736fc8422f,
  &s_c9077587d76c5afa,
  &s_ca0f437a8bea2455,
  &s_ccd2d3e745ef932b,
  &s_e8c4d594d2e14e84,
  &s_ebef82fe95bd560d,
  &s_faaf3a0c4e0b5737,
};
static const uint16_t m_cacb77c63c05de8f[] = {7, 8, 3, 4, 2, 5, 6, 1, 0};
static const uint16_t i_cacb77c63c05de8f[] = {0, 1, 2, 3, 4, 5, 6, 7, 8};
const ::capnp::_::RawSchema s_cacb77c63c05de8f = {
  0xcacb77c63c05de8f, b_cacb77c63c05de8f.words, 162, d_cacb77c63c05de8f, m_cacb77c63c05de8f,
  8, 9, i_cacb77c63c05de8f, nullptr, nullptr, { &s_cacb77c63c05de8f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Response
constexpr uint16_t Response::_capnpPrivate::dataWordSize;
constexpr uint16_t Response::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Response::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Response::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Response::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Response::Kind
constexpr uint16_t Response::Kind::_capnpPrivate::dataWordSize;
constexpr uint16_t Response::Kind::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Response::Kind::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Response::Kind::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Response::Kind::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



