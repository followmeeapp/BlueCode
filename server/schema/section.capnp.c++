// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: section.capnp

#include "section.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<66> b_f06fa914aa4f1ac6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    198,  26,  79, 170,  20, 169, 111, 240,
     14,   0,   0,   0,   1,   0,   1,   0,
     52,  96,  85,  79, 104,   3,  64, 218,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101,  99, 116, 105, 111, 110,  46,
     99,  97, 112, 110, 112,  58,  83, 101,
     99, 116, 105, 111, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 102, 111,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    203, 193,  12,  92,  61,  69,  89, 155,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 114, 100, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    141,  56, 123, 229,  67, 232,  12, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f06fa914aa4f1ac6 = b_f06fa914aa4f1ac6.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f06fa914aa4f1ac6[] = {
  &s_9b59453d5c0cc1cb,
  &s_c70ce843e57b388d,
};
static const uint16_t m_f06fa914aa4f1ac6[] = {2, 0, 1};
static const uint16_t i_f06fa914aa4f1ac6[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f06fa914aa4f1ac6 = {
  0xf06fa914aa4f1ac6, b_f06fa914aa4f1ac6.words, 66, d_f06fa914aa4f1ac6, m_f06fa914aa4f1ac6,
  2, 3, i_f06fa914aa4f1ac6, nullptr, nullptr, { &s_f06fa914aa4f1ac6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Section
constexpr uint16_t Section::_capnpPrivate::dataWordSize;
constexpr uint16_t Section::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Section::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Section::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Section::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



