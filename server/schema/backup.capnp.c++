// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: backup.capnp

#include "backup.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_c1f11213f800730d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     13, 115,   0, 248,  19,  18, 241, 193,
     13,   0,   0,   0,   1,   0,   1,   0,
     64, 229,  84, 187, 148, 182, 233, 155,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  46,  99,
     97, 112, 110, 112,  58,  66,  97,  99,
    107, 117, 112,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c1f11213f800730d = b_c1f11213f800730d.words;
#if !CAPNP_LITE
static const uint16_t m_c1f11213f800730d[] = {1, 0};
static const uint16_t i_c1f11213f800730d[] = {0, 1};
const ::capnp::_::RawSchema s_c1f11213f800730d = {
  0xc1f11213f800730d, b_c1f11213f800730d.words, 48, nullptr, m_c1f11213f800730d,
  0, 2, i_c1f11213f800730d, nullptr, nullptr, { &s_c1f11213f800730d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_c614a6e68f7dbf58 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     88, 191, 125, 143, 230, 166,  20, 198,
     13,   0,   0,   0,   1,   0,   1,   0,
     64, 229,  84, 187, 148, 182, 233, 155,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  46,  99,
     97, 112, 110, 112,  58,  67, 114, 101,
     97, 116, 101,  66,  97,  99, 107, 117,
    112,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    112, 114, 101, 118, 105, 111, 117, 115,
     66,  97,  99, 107, 117, 112,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     13, 115,   0, 248,  19,  18, 241, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c614a6e68f7dbf58 = b_c614a6e68f7dbf58.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c614a6e68f7dbf58[] = {
  &s_c1f11213f800730d,
};
static const uint16_t m_c614a6e68f7dbf58[] = {1, 0};
static const uint16_t i_c614a6e68f7dbf58[] = {0, 1};
const ::capnp::_::RawSchema s_c614a6e68f7dbf58 = {
  0xc614a6e68f7dbf58, b_c614a6e68f7dbf58.words, 50, d_c614a6e68f7dbf58, m_c614a6e68f7dbf58,
  1, 2, i_c614a6e68f7dbf58, nullptr, nullptr, { &s_c614a6e68f7dbf58, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_9f09967fec43bd05 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      5, 189,  67, 236, 127, 150,   9, 159,
     13,   0,   0,   0,   1,   0,   1,   0,
     64, 229,  84, 187, 148, 182, 233, 155,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  46,  99,
     97, 112, 110, 112,  58,  66,  97,  99,
    107, 117, 112,  82, 101, 113, 117, 101,
    115, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9f09967fec43bd05 = b_9f09967fec43bd05.words;
#if !CAPNP_LITE
static const uint16_t m_9f09967fec43bd05[] = {0};
static const uint16_t i_9f09967fec43bd05[] = {0};
const ::capnp::_::RawSchema s_9f09967fec43bd05 = {
  0x9f09967fec43bd05, b_9f09967fec43bd05.words, 34, nullptr, m_9f09967fec43bd05,
  0, 1, i_9f09967fec43bd05, nullptr, nullptr, { &s_9f09967fec43bd05, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_ad5f27736fc8422f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     47,  66, 200, 111, 115,  39,  95, 173,
     13,   0,   0,   0,   1,   0,   0,   0,
     64, 229,  84, 187, 148, 182, 233, 155,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  46,  99,
     97, 112, 110, 112,  58,  66,  97,  99,
    107, 117, 112,  82, 101, 115, 112, 111,
    110, 115, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     98,  97,  99, 107, 117, 112,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     13, 115,   0, 248,  19,  18, 241, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ad5f27736fc8422f = b_ad5f27736fc8422f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ad5f27736fc8422f[] = {
  &s_c1f11213f800730d,
};
static const uint16_t m_ad5f27736fc8422f[] = {0};
static const uint16_t i_ad5f27736fc8422f[] = {0};
const ::capnp::_::RawSchema s_ad5f27736fc8422f = {
  0xad5f27736fc8422f, b_ad5f27736fc8422f.words, 33, d_ad5f27736fc8422f, m_ad5f27736fc8422f,
  1, 1, i_ad5f27736fc8422f, nullptr, nullptr, { &s_ad5f27736fc8422f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_b021dba3477202c6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    198,   2, 114,  71, 163, 219,  33, 176,
     13,   0,   0,   0,   1,   0,   0,   0,
     64, 229,  84, 187, 148, 182, 233, 155,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  46,  99,
     97, 112, 110, 112,  58,  66,  97,  99,
    107, 117, 112,  76, 105, 115, 116,  82,
    101, 113, 117, 101, 115, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_b021dba3477202c6 = b_b021dba3477202c6.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b021dba3477202c6 = {
  0xb021dba3477202c6, b_b021dba3477202c6.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b021dba3477202c6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_e8c4d594d2e14e84 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    132,  78, 225, 210, 148, 213, 196, 232,
     13,   0,   0,   0,   1,   0,   0,   0,
     64, 229,  84, 187, 148, 182, 233, 155,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  46,  99,
     97, 112, 110, 112,  58,  66,  97,  99,
    107, 117, 112,  76, 105, 115, 116,  82,
    101, 115, 112, 111, 110, 115, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
     98,  97,  99, 107, 117, 112, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     13, 115,   0, 248,  19,  18, 241, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e8c4d594d2e14e84 = b_e8c4d594d2e14e84.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e8c4d594d2e14e84[] = {
  &s_c1f11213f800730d,
};
static const uint16_t m_e8c4d594d2e14e84[] = {0};
static const uint16_t i_e8c4d594d2e14e84[] = {0};
const ::capnp::_::RawSchema s_e8c4d594d2e14e84 = {
  0xe8c4d594d2e14e84, b_e8c4d594d2e14e84.words, 37, d_e8c4d594d2e14e84, m_e8c4d594d2e14e84,
  1, 1, i_e8c4d594d2e14e84, nullptr, nullptr, { &s_e8c4d594d2e14e84, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<112> b_c19a02195ece6346 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     70,  99, 206,  94,  25,   2, 154, 193,
     13,   0,   0,   0,   1,   0,   3,   0,
     64, 229,  84, 187, 148, 182, 233, 155,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  46,  99,
     97, 112, 110, 112,  58,  66,  97,  99,
    107, 117, 112,  67,  97, 114, 100,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0, 128,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0, 129,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 117, 108, 108,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111,  99,  97, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 115,  66,  76,  69,  67,  97, 114,
    100,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 115,  66, 108, 117, 101,  67,  97,
    114, 100,  76, 105, 110, 107,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c19a02195ece6346 = b_c19a02195ece6346.words;
#if !CAPNP_LITE
static const uint16_t m_c19a02195ece6346[] = {2, 0, 4, 5, 3, 1};
static const uint16_t i_c19a02195ece6346[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_c19a02195ece6346 = {
  0xc19a02195ece6346, b_c19a02195ece6346.words, 112, nullptr, m_c19a02195ece6346,
  0, 6, i_c19a02195ece6346, nullptr, nullptr, { &s_c19a02195ece6346, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<42> b_c260adac84c2a2f4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    244, 162, 194, 132, 172, 173,  96, 194,
     13,   0,   0,   0,   1,   0,   2,   0,
     64, 229,  84, 187, 148, 182, 233, 155,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  46,  99,
     97, 112, 110, 112,  58,  67, 108, 105,
    101, 110, 116,  66,  97,  99, 107, 117,
    112,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    209,  29,  97, 172,  23,  11, 240, 158,
     49,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 110, 100,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c260adac84c2a2f4 = b_c260adac84c2a2f4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c260adac84c2a2f4[] = {
  &s_9ef00b17ac611dd1,
};
static const uint16_t m_c260adac84c2a2f4[] = {1, 0};
static const uint16_t i_c260adac84c2a2f4[] = {0, 1};
const ::capnp::_::RawSchema s_c260adac84c2a2f4 = {
  0xc260adac84c2a2f4, b_c260adac84c2a2f4.words, 42, d_c260adac84c2a2f4, m_c260adac84c2a2f4,
  1, 2, i_c260adac84c2a2f4, nullptr, nullptr, { &s_c260adac84c2a2f4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_9ef00b17ac611dd1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209,  29,  97, 172,  23,  11, 240, 158,
     26,   0,   0,   0,   1,   0,   2,   0,
    244, 162, 194, 132, 172, 173,  96, 194,
      1,   0,   7,   0,   1,   0,   2,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  46,  99,
     97, 112, 110, 112,  58,  67, 108, 105,
    101, 110, 116,  66,  97,  99, 107, 117,
    112,  46, 107, 105, 110, 100,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    117, 110, 107, 110, 111, 119, 110,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  67,  97,
    114, 100,  76, 105, 115, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     70,  99, 206,  94,  25,   2, 154, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ef00b17ac611dd1 = b_9ef00b17ac611dd1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9ef00b17ac611dd1[] = {
  &s_c19a02195ece6346,
  &s_c260adac84c2a2f4,
};
static const uint16_t m_9ef00b17ac611dd1[] = {1, 0};
static const uint16_t i_9ef00b17ac611dd1[] = {0, 1};
const ::capnp::_::RawSchema s_9ef00b17ac611dd1 = {
  0x9ef00b17ac611dd1, b_9ef00b17ac611dd1.words, 52, d_9ef00b17ac611dd1, m_9ef00b17ac611dd1,
  2, 2, i_9ef00b17ac611dd1, nullptr, nullptr, { &s_9ef00b17ac611dd1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Backup
constexpr uint16_t Backup::_capnpPrivate::dataWordSize;
constexpr uint16_t Backup::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Backup::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Backup::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Backup::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// CreateBackupRequest
constexpr uint16_t CreateBackupRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t CreateBackupRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CreateBackupRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CreateBackupRequest::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* CreateBackupRequest::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// BackupRequest
constexpr uint16_t BackupRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t BackupRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BackupRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BackupRequest::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* BackupRequest::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// BackupResponse
constexpr uint16_t BackupResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t BackupResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BackupResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BackupResponse::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* BackupResponse::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// BackupListRequest
constexpr uint16_t BackupListRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t BackupListRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BackupListRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BackupListRequest::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* BackupListRequest::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// BackupListResponse
constexpr uint16_t BackupListResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t BackupListResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BackupListResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BackupListResponse::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* BackupListResponse::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// BackupCard
constexpr uint16_t BackupCard::_capnpPrivate::dataWordSize;
constexpr uint16_t BackupCard::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BackupCard::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BackupCard::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* BackupCard::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ClientBackup
constexpr uint16_t ClientBackup::_capnpPrivate::dataWordSize;
constexpr uint16_t ClientBackup::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ClientBackup::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ClientBackup::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ClientBackup::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ClientBackup::Kind
constexpr uint16_t ClientBackup::Kind::_capnpPrivate::dataWordSize;
constexpr uint16_t ClientBackup::Kind::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ClientBackup::Kind::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ClientBackup::Kind::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ClientBackup::Kind::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



