// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: sync.capnp

#ifndef CAPNP_INCLUDED_e4e4ebcfac670506_
#define CAPNP_INCLUDED_e4e4ebcfac670506_

#include "capnproto/capnp/generated-header-support.h"

#if CAPNP_VERSION != 6000
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include "card_info.capnp.h"
#include "device_info.capnp.h"
#include "discover_info.capnp.h"
#include "sync_info.capnp.h"

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(c6428d0f45aadd48);
CAPNP_DECLARE_SCHEMA(c66634644adf781c);

}  // namespace schemas
}  // namespace capnp


struct SyncRequest {
  SyncRequest() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(c6428d0f45aadd48, 3, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand = &schema->defaultBrand;
    #endif  // !CAPNP_LITE
  };
};

struct SyncResponse {
  SyncResponse() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(c66634644adf781c, 0, 5)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand = &schema->defaultBrand;
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class SyncRequest::Reader {
public:
  typedef SyncRequest Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand);
  }
#endif  // !CAPNP_LITE

  inline bool hasDiscoverInfo() const;
  inline  ::DiscoverInfo::Reader getDiscoverInfo() const;

  inline bool getWantsCardsAdvertisedByDevice() const;

  inline  ::int64_t getLatestRecentCard() const;

  inline  ::int64_t getLatestDiscoveredDevice() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class SyncRequest::Builder {
public:
  typedef SyncRequest Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasDiscoverInfo();
  inline  ::DiscoverInfo::Builder getDiscoverInfo();
  inline void setDiscoverInfo( ::DiscoverInfo::Reader value);
  inline  ::DiscoverInfo::Builder initDiscoverInfo();
  inline void adoptDiscoverInfo(::capnp::Orphan< ::DiscoverInfo>&& value);
  inline ::capnp::Orphan< ::DiscoverInfo> disownDiscoverInfo();

  inline bool getWantsCardsAdvertisedByDevice();
  inline void setWantsCardsAdvertisedByDevice(bool value);

  inline  ::int64_t getLatestRecentCard();
  inline void setLatestRecentCard( ::int64_t value);

  inline  ::int64_t getLatestDiscoveredDevice();
  inline void setLatestDiscoveredDevice( ::int64_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class SyncRequest::Pipeline {
public:
  typedef SyncRequest Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::DiscoverInfo::Pipeline getDiscoverInfo();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class SyncResponse::Reader {
public:
  typedef SyncResponse Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand);
  }
#endif  // !CAPNP_LITE

  inline bool hasDiscoverInfo() const;
  inline  ::DiscoverInfo::Reader getDiscoverInfo() const;

  inline bool hasSyncInfo() const;
  inline  ::SyncInfo::Reader getSyncInfo() const;

  inline bool hasCardsAdvertisedByDevice() const;
  inline  ::capnp::List< ::int64_t>::Reader getCardsAdvertisedByDevice() const;

  inline bool hasDiscoveredDevices() const;
  inline  ::capnp::List< ::DeviceInfo>::Reader getDiscoveredDevices() const;

  inline bool hasRecentCards() const;
  inline  ::capnp::List< ::CardInfo>::Reader getRecentCards() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class SyncResponse::Builder {
public:
  typedef SyncResponse Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasDiscoverInfo();
  inline  ::DiscoverInfo::Builder getDiscoverInfo();
  inline void setDiscoverInfo( ::DiscoverInfo::Reader value);
  inline  ::DiscoverInfo::Builder initDiscoverInfo();
  inline void adoptDiscoverInfo(::capnp::Orphan< ::DiscoverInfo>&& value);
  inline ::capnp::Orphan< ::DiscoverInfo> disownDiscoverInfo();

  inline bool hasSyncInfo();
  inline  ::SyncInfo::Builder getSyncInfo();
  inline void setSyncInfo( ::SyncInfo::Reader value);
  inline  ::SyncInfo::Builder initSyncInfo();
  inline void adoptSyncInfo(::capnp::Orphan< ::SyncInfo>&& value);
  inline ::capnp::Orphan< ::SyncInfo> disownSyncInfo();

  inline bool hasCardsAdvertisedByDevice();
  inline  ::capnp::List< ::int64_t>::Builder getCardsAdvertisedByDevice();
  inline void setCardsAdvertisedByDevice( ::capnp::List< ::int64_t>::Reader value);
  inline void setCardsAdvertisedByDevice(::kj::ArrayPtr<const  ::int64_t> value);
  inline  ::capnp::List< ::int64_t>::Builder initCardsAdvertisedByDevice(unsigned int size);
  inline void adoptCardsAdvertisedByDevice(::capnp::Orphan< ::capnp::List< ::int64_t>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::int64_t>> disownCardsAdvertisedByDevice();

  inline bool hasDiscoveredDevices();
  inline  ::capnp::List< ::DeviceInfo>::Builder getDiscoveredDevices();
  inline void setDiscoveredDevices( ::capnp::List< ::DeviceInfo>::Reader value);
  inline  ::capnp::List< ::DeviceInfo>::Builder initDiscoveredDevices(unsigned int size);
  inline void adoptDiscoveredDevices(::capnp::Orphan< ::capnp::List< ::DeviceInfo>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::DeviceInfo>> disownDiscoveredDevices();

  inline bool hasRecentCards();
  inline  ::capnp::List< ::CardInfo>::Builder getRecentCards();
  inline void setRecentCards( ::capnp::List< ::CardInfo>::Reader value);
  inline  ::capnp::List< ::CardInfo>::Builder initRecentCards(unsigned int size);
  inline void adoptRecentCards(::capnp::Orphan< ::capnp::List< ::CardInfo>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::CardInfo>> disownRecentCards();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class SyncResponse::Pipeline {
public:
  typedef SyncResponse Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::DiscoverInfo::Pipeline getDiscoverInfo();
  inline  ::SyncInfo::Pipeline getSyncInfo();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline bool SyncRequest::Reader::hasDiscoverInfo() const {
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool SyncRequest::Builder::hasDiscoverInfo() {
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::DiscoverInfo::Reader SyncRequest::Reader::getDiscoverInfo() const {
  return ::capnp::_::PointerHelpers< ::DiscoverInfo>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::DiscoverInfo::Builder SyncRequest::Builder::getDiscoverInfo() {
  return ::capnp::_::PointerHelpers< ::DiscoverInfo>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::DiscoverInfo::Pipeline SyncRequest::Pipeline::getDiscoverInfo() {
  return  ::DiscoverInfo::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void SyncRequest::Builder::setDiscoverInfo( ::DiscoverInfo::Reader value) {
  ::capnp::_::PointerHelpers< ::DiscoverInfo>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::DiscoverInfo::Builder SyncRequest::Builder::initDiscoverInfo() {
  return ::capnp::_::PointerHelpers< ::DiscoverInfo>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void SyncRequest::Builder::adoptDiscoverInfo(
    ::capnp::Orphan< ::DiscoverInfo>&& value) {
  ::capnp::_::PointerHelpers< ::DiscoverInfo>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::DiscoverInfo> SyncRequest::Builder::disownDiscoverInfo() {
  return ::capnp::_::PointerHelpers< ::DiscoverInfo>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool SyncRequest::Reader::getWantsCardsAdvertisedByDevice() const {
  return _reader.getDataField<bool>(
      0 * ::capnp::ELEMENTS);
}

inline bool SyncRequest::Builder::getWantsCardsAdvertisedByDevice() {
  return _builder.getDataField<bool>(
      0 * ::capnp::ELEMENTS);
}
inline void SyncRequest::Builder::setWantsCardsAdvertisedByDevice(bool value) {
  _builder.setDataField<bool>(
      0 * ::capnp::ELEMENTS, value);
}

inline  ::int64_t SyncRequest::Reader::getLatestRecentCard() const {
  return _reader.getDataField< ::int64_t>(
      1 * ::capnp::ELEMENTS);
}

inline  ::int64_t SyncRequest::Builder::getLatestRecentCard() {
  return _builder.getDataField< ::int64_t>(
      1 * ::capnp::ELEMENTS);
}
inline void SyncRequest::Builder::setLatestRecentCard( ::int64_t value) {
  _builder.setDataField< ::int64_t>(
      1 * ::capnp::ELEMENTS, value);
}

inline  ::int64_t SyncRequest::Reader::getLatestDiscoveredDevice() const {
  return _reader.getDataField< ::int64_t>(
      2 * ::capnp::ELEMENTS);
}

inline  ::int64_t SyncRequest::Builder::getLatestDiscoveredDevice() {
  return _builder.getDataField< ::int64_t>(
      2 * ::capnp::ELEMENTS);
}
inline void SyncRequest::Builder::setLatestDiscoveredDevice( ::int64_t value) {
  _builder.setDataField< ::int64_t>(
      2 * ::capnp::ELEMENTS, value);
}

inline bool SyncResponse::Reader::hasDiscoverInfo() const {
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool SyncResponse::Builder::hasDiscoverInfo() {
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::DiscoverInfo::Reader SyncResponse::Reader::getDiscoverInfo() const {
  return ::capnp::_::PointerHelpers< ::DiscoverInfo>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::DiscoverInfo::Builder SyncResponse::Builder::getDiscoverInfo() {
  return ::capnp::_::PointerHelpers< ::DiscoverInfo>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::DiscoverInfo::Pipeline SyncResponse::Pipeline::getDiscoverInfo() {
  return  ::DiscoverInfo::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void SyncResponse::Builder::setDiscoverInfo( ::DiscoverInfo::Reader value) {
  ::capnp::_::PointerHelpers< ::DiscoverInfo>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::DiscoverInfo::Builder SyncResponse::Builder::initDiscoverInfo() {
  return ::capnp::_::PointerHelpers< ::DiscoverInfo>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void SyncResponse::Builder::adoptDiscoverInfo(
    ::capnp::Orphan< ::DiscoverInfo>&& value) {
  ::capnp::_::PointerHelpers< ::DiscoverInfo>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::DiscoverInfo> SyncResponse::Builder::disownDiscoverInfo() {
  return ::capnp::_::PointerHelpers< ::DiscoverInfo>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool SyncResponse::Reader::hasSyncInfo() const {
  return !_reader.getPointerField(1 * ::capnp::POINTERS).isNull();
}
inline bool SyncResponse::Builder::hasSyncInfo() {
  return !_builder.getPointerField(1 * ::capnp::POINTERS).isNull();
}
inline  ::SyncInfo::Reader SyncResponse::Reader::getSyncInfo() const {
  return ::capnp::_::PointerHelpers< ::SyncInfo>::get(
      _reader.getPointerField(1 * ::capnp::POINTERS));
}
inline  ::SyncInfo::Builder SyncResponse::Builder::getSyncInfo() {
  return ::capnp::_::PointerHelpers< ::SyncInfo>::get(
      _builder.getPointerField(1 * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::SyncInfo::Pipeline SyncResponse::Pipeline::getSyncInfo() {
  return  ::SyncInfo::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void SyncResponse::Builder::setSyncInfo( ::SyncInfo::Reader value) {
  ::capnp::_::PointerHelpers< ::SyncInfo>::set(
      _builder.getPointerField(1 * ::capnp::POINTERS), value);
}
inline  ::SyncInfo::Builder SyncResponse::Builder::initSyncInfo() {
  return ::capnp::_::PointerHelpers< ::SyncInfo>::init(
      _builder.getPointerField(1 * ::capnp::POINTERS));
}
inline void SyncResponse::Builder::adoptSyncInfo(
    ::capnp::Orphan< ::SyncInfo>&& value) {
  ::capnp::_::PointerHelpers< ::SyncInfo>::adopt(
      _builder.getPointerField(1 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::SyncInfo> SyncResponse::Builder::disownSyncInfo() {
  return ::capnp::_::PointerHelpers< ::SyncInfo>::disown(
      _builder.getPointerField(1 * ::capnp::POINTERS));
}

inline bool SyncResponse::Reader::hasCardsAdvertisedByDevice() const {
  return !_reader.getPointerField(2 * ::capnp::POINTERS).isNull();
}
inline bool SyncResponse::Builder::hasCardsAdvertisedByDevice() {
  return !_builder.getPointerField(2 * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::int64_t>::Reader SyncResponse::Reader::getCardsAdvertisedByDevice() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::int64_t>>::get(
      _reader.getPointerField(2 * ::capnp::POINTERS));
}
inline  ::capnp::List< ::int64_t>::Builder SyncResponse::Builder::getCardsAdvertisedByDevice() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::int64_t>>::get(
      _builder.getPointerField(2 * ::capnp::POINTERS));
}
inline void SyncResponse::Builder::setCardsAdvertisedByDevice( ::capnp::List< ::int64_t>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::int64_t>>::set(
      _builder.getPointerField(2 * ::capnp::POINTERS), value);
}
inline void SyncResponse::Builder::setCardsAdvertisedByDevice(::kj::ArrayPtr<const  ::int64_t> value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::int64_t>>::set(
      _builder.getPointerField(2 * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::int64_t>::Builder SyncResponse::Builder::initCardsAdvertisedByDevice(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::int64_t>>::init(
      _builder.getPointerField(2 * ::capnp::POINTERS), size);
}
inline void SyncResponse::Builder::adoptCardsAdvertisedByDevice(
    ::capnp::Orphan< ::capnp::List< ::int64_t>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::int64_t>>::adopt(
      _builder.getPointerField(2 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::int64_t>> SyncResponse::Builder::disownCardsAdvertisedByDevice() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::int64_t>>::disown(
      _builder.getPointerField(2 * ::capnp::POINTERS));
}

inline bool SyncResponse::Reader::hasDiscoveredDevices() const {
  return !_reader.getPointerField(3 * ::capnp::POINTERS).isNull();
}
inline bool SyncResponse::Builder::hasDiscoveredDevices() {
  return !_builder.getPointerField(3 * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::DeviceInfo>::Reader SyncResponse::Reader::getDiscoveredDevices() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::DeviceInfo>>::get(
      _reader.getPointerField(3 * ::capnp::POINTERS));
}
inline  ::capnp::List< ::DeviceInfo>::Builder SyncResponse::Builder::getDiscoveredDevices() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::DeviceInfo>>::get(
      _builder.getPointerField(3 * ::capnp::POINTERS));
}
inline void SyncResponse::Builder::setDiscoveredDevices( ::capnp::List< ::DeviceInfo>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::DeviceInfo>>::set(
      _builder.getPointerField(3 * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::DeviceInfo>::Builder SyncResponse::Builder::initDiscoveredDevices(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::DeviceInfo>>::init(
      _builder.getPointerField(3 * ::capnp::POINTERS), size);
}
inline void SyncResponse::Builder::adoptDiscoveredDevices(
    ::capnp::Orphan< ::capnp::List< ::DeviceInfo>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::DeviceInfo>>::adopt(
      _builder.getPointerField(3 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::DeviceInfo>> SyncResponse::Builder::disownDiscoveredDevices() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::DeviceInfo>>::disown(
      _builder.getPointerField(3 * ::capnp::POINTERS));
}

inline bool SyncResponse::Reader::hasRecentCards() const {
  return !_reader.getPointerField(4 * ::capnp::POINTERS).isNull();
}
inline bool SyncResponse::Builder::hasRecentCards() {
  return !_builder.getPointerField(4 * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::CardInfo>::Reader SyncResponse::Reader::getRecentCards() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::CardInfo>>::get(
      _reader.getPointerField(4 * ::capnp::POINTERS));
}
inline  ::capnp::List< ::CardInfo>::Builder SyncResponse::Builder::getRecentCards() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::CardInfo>>::get(
      _builder.getPointerField(4 * ::capnp::POINTERS));
}
inline void SyncResponse::Builder::setRecentCards( ::capnp::List< ::CardInfo>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::CardInfo>>::set(
      _builder.getPointerField(4 * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::CardInfo>::Builder SyncResponse::Builder::initRecentCards(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::CardInfo>>::init(
      _builder.getPointerField(4 * ::capnp::POINTERS), size);
}
inline void SyncResponse::Builder::adoptRecentCards(
    ::capnp::Orphan< ::capnp::List< ::CardInfo>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::CardInfo>>::adopt(
      _builder.getPointerField(4 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::CardInfo>> SyncResponse::Builder::disownRecentCards() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::CardInfo>>::disown(
      _builder.getPointerField(4 * ::capnp::POINTERS));
}


#endif  // CAPNP_INCLUDED_e4e4ebcfac670506_
