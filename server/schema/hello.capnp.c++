// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: hello.capnp

#include "hello.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<33> b_f489a65181ad32c9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    201,  50, 173, 129,  81, 166, 137, 244,
     12,   0,   0,   0,   1,   0,   0,   0,
    195, 136,  40, 188, 106, 160,  59, 223,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101, 108, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  72, 101, 108, 108,
    111,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    117, 117, 105, 100,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f489a65181ad32c9 = b_f489a65181ad32c9.words;
#if !CAPNP_LITE
static const uint16_t m_f489a65181ad32c9[] = {0};
static const uint16_t i_f489a65181ad32c9[] = {0};
const ::capnp::_::RawSchema s_f489a65181ad32c9 = {
  0xf489a65181ad32c9, b_f489a65181ad32c9.words, 33, nullptr, m_f489a65181ad32c9,
  0, 1, i_f489a65181ad32c9, nullptr, nullptr, { &s_f489a65181ad32c9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_ca0f437a8bea2455 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     85,  36, 234, 139, 122,  67,  15, 202,
     12,   0,   0,   0,   1,   0,   1,   0,
    195, 136,  40, 188, 106, 160,  59, 223,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101, 108, 108, 111,  46,  99,  97,
    112, 110, 112,  58,  72, 101, 108, 108,
    111,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
    100, 101, 118, 105,  99, 101,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111, 118, 101, 114,
    121,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    250,  90, 108, 215, 135, 117,   7, 201,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ca0f437a8bea2455 = b_ca0f437a8bea2455.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ca0f437a8bea2455[] = {
  &s_c9077587d76c5afa,
};
static const uint16_t m_ca0f437a8bea2455[] = {0, 1};
static const uint16_t i_ca0f437a8bea2455[] = {0, 1};
const ::capnp::_::RawSchema s_ca0f437a8bea2455 = {
  0xca0f437a8bea2455, b_ca0f437a8bea2455.words, 51, d_ca0f437a8bea2455, m_ca0f437a8bea2455,
  1, 2, i_ca0f437a8bea2455, nullptr, nullptr, { &s_ca0f437a8bea2455, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// HelloRequest
constexpr uint16_t HelloRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t HelloRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HelloRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HelloRequest::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* HelloRequest::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// HelloResponse
constexpr uint16_t HelloResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t HelloResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind HelloResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* HelloResponse::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* HelloResponse::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



