// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: client_sync.capnp

#include "client_sync.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<69> b_928b7aa788b6b663 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     99, 182, 182, 136, 167, 122, 139, 146,
     18,   0,   0,   0,   1,   0,   3,   0,
    191,  95,  13,  38, 247, 171, 105, 129,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 105, 101, 110, 116,  95, 115,
    121, 110,  99,  46,  99,  97, 112, 110,
    112,  58,  67, 108, 105, 101, 110, 116,
     83, 121, 110,  99,  82, 101, 113, 117,
    101, 115, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
    108,  97, 115, 116,  83, 101,  99, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 115, 116,  66, 108, 111,  99,
    107,  84, 105, 109, 101, 115, 116,  97,
    109, 112,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 115, 116,  82, 101, 109, 111,
    118, 101,  84, 105, 109, 101, 115, 116,
     97, 109, 112,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_928b7aa788b6b663 = b_928b7aa788b6b663.words;
#if !CAPNP_LITE
static const uint16_t m_928b7aa788b6b663[] = {1, 2, 0};
static const uint16_t i_928b7aa788b6b663[] = {0, 1, 2};
const ::capnp::_::RawSchema s_928b7aa788b6b663 = {
  0x928b7aa788b6b663, b_928b7aa788b6b663.words, 69, nullptr, m_928b7aa788b6b663,
  0, 3, i_928b7aa788b6b663, nullptr, nullptr, { &s_928b7aa788b6b663, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<78> b_e9b94e347f9f51bd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    189,  81, 159, 127,  52,  78, 185, 233,
     18,   0,   0,   0,   1,   0,   0,   0,
    191,  95,  13,  38, 247, 171, 105, 129,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 105, 101, 110, 116,  95, 115,
    121, 110,  99,  46,  99,  97, 112, 110,
    112,  58,  67, 108, 105, 101, 110, 116,
     83, 121, 110,  99,  82, 101, 115, 112,
    111, 110, 115, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
    115, 101,  99, 116, 105, 111, 110, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    198,  26,  79, 170,  20, 169, 111, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     68, 162,  96, 254, 211, 196, 102, 131,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 109, 111, 118,  97, 108, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     66, 230,  29, 201, 250,  15, 115, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e9b94e347f9f51bd = b_e9b94e347f9f51bd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e9b94e347f9f51bd[] = {
  &s_8366c4d3fe60a244,
  &s_d4730ffac91de642,
  &s_f06fa914aa4f1ac6,
};
static const uint16_t m_e9b94e347f9f51bd[] = {1, 2, 0};
static const uint16_t i_e9b94e347f9f51bd[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e9b94e347f9f51bd = {
  0xe9b94e347f9f51bd, b_e9b94e347f9f51bd.words, 78, d_e9b94e347f9f51bd, m_e9b94e347f9f51bd,
  3, 3, i_e9b94e347f9f51bd, nullptr, nullptr, { &s_e9b94e347f9f51bd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// ClientSyncRequest
constexpr uint16_t ClientSyncRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t ClientSyncRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ClientSyncRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ClientSyncRequest::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ClientSyncRequest::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// ClientSyncResponse
constexpr uint16_t ClientSyncResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t ClientSyncResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ClientSyncResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ClientSyncResponse::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ClientSyncResponse::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



