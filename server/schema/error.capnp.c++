// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: error.capnp

#include "error.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<51> b_ebef82fe95bd560d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     13,  86, 189, 149, 254, 130, 239, 235,
     12,   0,   0,   0,   1,   0,   1,   0,
    167, 223, 199,   7,   7, 142,  20, 219,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 114, 114, 111, 114,  46,  99,  97,
    112, 110, 112,  58,  69, 114, 114, 111,
    114,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    150,  82, 104,  91, 154, 134, 123, 162,
      1,   0,   0,   0,  42,   0,   0,   0,
     67, 111, 100, 101,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 100, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    150,  82, 104,  91, 154, 134, 123, 162,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ebef82fe95bd560d = b_ebef82fe95bd560d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ebef82fe95bd560d[] = {
  &s_a27b869a5b685296,
};
static const uint16_t m_ebef82fe95bd560d[] = {0, 1};
static const uint16_t i_ebef82fe95bd560d[] = {0, 1};
const ::capnp::_::RawSchema s_ebef82fe95bd560d = {
  0xebef82fe95bd560d, b_ebef82fe95bd560d.words, 51, d_ebef82fe95bd560d, m_ebef82fe95bd560d,
  1, 2, i_ebef82fe95bd560d, nullptr, nullptr, { &s_ebef82fe95bd560d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<28> b_a27b869a5b685296 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    150,  82, 104,  91, 154, 134, 123, 162,
     26,   0,   0,   0,   2,   0,   0,   0,
     13,  86, 189, 149, 254, 130, 239, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 114, 114, 111, 114,  46,  99,  97,
    112, 110, 112,  58,  69, 114, 114, 111,
    114,  82, 101, 115, 112, 111, 110, 115,
    101,  46,  67, 111, 100, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 107, 110, 111, 119, 110,   0,
    100, 105, 115,  99, 111, 118, 101, 114,
    121,  78, 111, 116,  65, 118,  97, 105,
    108,  97,  98, 108, 101,   0,   0,   0, }
};
::capnp::word const* const bp_a27b869a5b685296 = b_a27b869a5b685296.words;
#if !CAPNP_LITE
static const uint16_t m_a27b869a5b685296[] = {1, 0};
const ::capnp::_::RawSchema s_a27b869a5b685296 = {
  0xa27b869a5b685296, b_a27b869a5b685296.words, 28, nullptr, m_a27b869a5b685296,
  0, 2, nullptr, nullptr, nullptr, { &s_a27b869a5b685296, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Code_a27b869a5b685296, a27b869a5b685296);
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// ErrorResponse
constexpr uint16_t ErrorResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t ErrorResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind ErrorResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ErrorResponse::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* ErrorResponse::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



