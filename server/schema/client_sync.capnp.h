// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: client_sync.capnp

#ifndef CAPNP_INCLUDED_8169abf7260d5fbf_
#define CAPNP_INCLUDED_8169abf7260d5fbf_

#include "capnproto/capnp/generated-header-support.h"

#if CAPNP_VERSION != 6000
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include "block.capnp.h"
#include "remove.capnp.h"
#include "section.capnp.h"

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(928b7aa788b6b663);
CAPNP_DECLARE_SCHEMA(e9b94e347f9f51bd);

}  // namespace schemas
}  // namespace capnp


struct ClientSyncRequest {
  ClientSyncRequest() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(928b7aa788b6b663, 3, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand = &schema->defaultBrand;
    #endif  // !CAPNP_LITE
  };
};

struct ClientSyncResponse {
  ClientSyncResponse() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(e9b94e347f9f51bd, 0, 3)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand = &schema->defaultBrand;
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class ClientSyncRequest::Reader {
public:
  typedef ClientSyncRequest Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand);
  }
#endif  // !CAPNP_LITE

  inline  ::int64_t getLastSection() const;

  inline  ::int64_t getLastBlockTimestamp() const;

  inline  ::int64_t getLastRemoveTimestamp() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ClientSyncRequest::Builder {
public:
  typedef ClientSyncRequest Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::int64_t getLastSection();
  inline void setLastSection( ::int64_t value);

  inline  ::int64_t getLastBlockTimestamp();
  inline void setLastBlockTimestamp( ::int64_t value);

  inline  ::int64_t getLastRemoveTimestamp();
  inline void setLastRemoveTimestamp( ::int64_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ClientSyncRequest::Pipeline {
public:
  typedef ClientSyncRequest Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class ClientSyncResponse::Reader {
public:
  typedef ClientSyncResponse Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand);
  }
#endif  // !CAPNP_LITE

  inline bool hasSections() const;
  inline  ::capnp::List< ::Section>::Reader getSections() const;

  inline bool hasBlocks() const;
  inline  ::capnp::List< ::Block>::Reader getBlocks() const;

  inline bool hasRemovals() const;
  inline  ::capnp::List< ::Removal>::Reader getRemovals() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ClientSyncResponse::Builder {
public:
  typedef ClientSyncResponse Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasSections();
  inline  ::capnp::List< ::Section>::Builder getSections();
  inline void setSections( ::capnp::List< ::Section>::Reader value);
  inline  ::capnp::List< ::Section>::Builder initSections(unsigned int size);
  inline void adoptSections(::capnp::Orphan< ::capnp::List< ::Section>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::Section>> disownSections();

  inline bool hasBlocks();
  inline  ::capnp::List< ::Block>::Builder getBlocks();
  inline void setBlocks( ::capnp::List< ::Block>::Reader value);
  inline  ::capnp::List< ::Block>::Builder initBlocks(unsigned int size);
  inline void adoptBlocks(::capnp::Orphan< ::capnp::List< ::Block>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::Block>> disownBlocks();

  inline bool hasRemovals();
  inline  ::capnp::List< ::Removal>::Builder getRemovals();
  inline void setRemovals( ::capnp::List< ::Removal>::Reader value);
  inline  ::capnp::List< ::Removal>::Builder initRemovals(unsigned int size);
  inline void adoptRemovals(::capnp::Orphan< ::capnp::List< ::Removal>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::Removal>> disownRemovals();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ClientSyncResponse::Pipeline {
public:
  typedef ClientSyncResponse Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline  ::int64_t ClientSyncRequest::Reader::getLastSection() const {
  return _reader.getDataField< ::int64_t>(
      0 * ::capnp::ELEMENTS);
}

inline  ::int64_t ClientSyncRequest::Builder::getLastSection() {
  return _builder.getDataField< ::int64_t>(
      0 * ::capnp::ELEMENTS);
}
inline void ClientSyncRequest::Builder::setLastSection( ::int64_t value) {
  _builder.setDataField< ::int64_t>(
      0 * ::capnp::ELEMENTS, value);
}

inline  ::int64_t ClientSyncRequest::Reader::getLastBlockTimestamp() const {
  return _reader.getDataField< ::int64_t>(
      1 * ::capnp::ELEMENTS);
}

inline  ::int64_t ClientSyncRequest::Builder::getLastBlockTimestamp() {
  return _builder.getDataField< ::int64_t>(
      1 * ::capnp::ELEMENTS);
}
inline void ClientSyncRequest::Builder::setLastBlockTimestamp( ::int64_t value) {
  _builder.setDataField< ::int64_t>(
      1 * ::capnp::ELEMENTS, value);
}

inline  ::int64_t ClientSyncRequest::Reader::getLastRemoveTimestamp() const {
  return _reader.getDataField< ::int64_t>(
      2 * ::capnp::ELEMENTS);
}

inline  ::int64_t ClientSyncRequest::Builder::getLastRemoveTimestamp() {
  return _builder.getDataField< ::int64_t>(
      2 * ::capnp::ELEMENTS);
}
inline void ClientSyncRequest::Builder::setLastRemoveTimestamp( ::int64_t value) {
  _builder.setDataField< ::int64_t>(
      2 * ::capnp::ELEMENTS, value);
}

inline bool ClientSyncResponse::Reader::hasSections() const {
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool ClientSyncResponse::Builder::hasSections() {
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::Section>::Reader ClientSyncResponse::Reader::getSections() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::Section>>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::capnp::List< ::Section>::Builder ClientSyncResponse::Builder::getSections() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::Section>>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void ClientSyncResponse::Builder::setSections( ::capnp::List< ::Section>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::Section>>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::Section>::Builder ClientSyncResponse::Builder::initSections(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::Section>>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS), size);
}
inline void ClientSyncResponse::Builder::adoptSections(
    ::capnp::Orphan< ::capnp::List< ::Section>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::Section>>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::Section>> ClientSyncResponse::Builder::disownSections() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::Section>>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool ClientSyncResponse::Reader::hasBlocks() const {
  return !_reader.getPointerField(1 * ::capnp::POINTERS).isNull();
}
inline bool ClientSyncResponse::Builder::hasBlocks() {
  return !_builder.getPointerField(1 * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::Block>::Reader ClientSyncResponse::Reader::getBlocks() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::Block>>::get(
      _reader.getPointerField(1 * ::capnp::POINTERS));
}
inline  ::capnp::List< ::Block>::Builder ClientSyncResponse::Builder::getBlocks() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::Block>>::get(
      _builder.getPointerField(1 * ::capnp::POINTERS));
}
inline void ClientSyncResponse::Builder::setBlocks( ::capnp::List< ::Block>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::Block>>::set(
      _builder.getPointerField(1 * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::Block>::Builder ClientSyncResponse::Builder::initBlocks(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::Block>>::init(
      _builder.getPointerField(1 * ::capnp::POINTERS), size);
}
inline void ClientSyncResponse::Builder::adoptBlocks(
    ::capnp::Orphan< ::capnp::List< ::Block>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::Block>>::adopt(
      _builder.getPointerField(1 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::Block>> ClientSyncResponse::Builder::disownBlocks() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::Block>>::disown(
      _builder.getPointerField(1 * ::capnp::POINTERS));
}

inline bool ClientSyncResponse::Reader::hasRemovals() const {
  return !_reader.getPointerField(2 * ::capnp::POINTERS).isNull();
}
inline bool ClientSyncResponse::Builder::hasRemovals() {
  return !_builder.getPointerField(2 * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::Removal>::Reader ClientSyncResponse::Reader::getRemovals() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::Removal>>::get(
      _reader.getPointerField(2 * ::capnp::POINTERS));
}
inline  ::capnp::List< ::Removal>::Builder ClientSyncResponse::Builder::getRemovals() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::Removal>>::get(
      _builder.getPointerField(2 * ::capnp::POINTERS));
}
inline void ClientSyncResponse::Builder::setRemovals( ::capnp::List< ::Removal>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::Removal>>::set(
      _builder.getPointerField(2 * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::Removal>::Builder ClientSyncResponse::Builder::initRemovals(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::Removal>>::init(
      _builder.getPointerField(2 * ::capnp::POINTERS), size);
}
inline void ClientSyncResponse::Builder::adoptRemovals(
    ::capnp::Orphan< ::capnp::List< ::Removal>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::Removal>>::adopt(
      _builder.getPointerField(2 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::Removal>> ClientSyncResponse::Builder::disownRemovals() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::Removal>>::disown(
      _builder.getPointerField(2 * ::capnp::POINTERS));
}


#endif  // CAPNP_INCLUDED_8169abf7260d5fbf_
