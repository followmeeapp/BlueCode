// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: sync_info.capnp

#include "sync_info.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<67> b_a2389ec3e5abb32f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     47, 179, 171, 229, 195, 158,  56, 162,
     16,   0,   0,   0,   1,   0,   3,   0,
    167, 170, 151, 174, 178, 143, 207, 143,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 121, 110,  99,  95, 105, 110, 102,
    111,  46,  99,  97, 112, 110, 112,  58,
     83, 121, 110,  99,  73, 110, 102, 111,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 114, 100, 115,  86, 101, 114,
    115, 105, 111, 110,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 115, 116,  67,  97, 114, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 115, 116,  68, 101, 118, 105,
     99, 101,  85, 112, 100,  97, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a2389ec3e5abb32f = b_a2389ec3e5abb32f.words;
#if !CAPNP_LITE
static const uint16_t m_a2389ec3e5abb32f[] = {0, 1, 2};
static const uint16_t i_a2389ec3e5abb32f[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a2389ec3e5abb32f = {
  0xa2389ec3e5abb32f, b_a2389ec3e5abb32f.words, 67, nullptr, m_a2389ec3e5abb32f,
  0, 3, i_a2389ec3e5abb32f, nullptr, nullptr, { &s_a2389ec3e5abb32f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// SyncInfo
constexpr uint16_t SyncInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t SyncInfo::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SyncInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SyncInfo::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SyncInfo::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



