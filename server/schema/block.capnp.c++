// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: block.capnp

#include "block.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_8366c4d3fe60a244 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     68, 162,  96, 254, 211, 196, 102, 131,
     12,   0,   0,   0,   1,   0,   2,   0,
      4,  36, 235, 245, 210,   1, 179, 128,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107,  46,  99,  97,
    112, 110, 112,  58,  66, 108, 111,  99,
    107,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 114, 100,  73, 100,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8366c4d3fe60a244 = b_8366c4d3fe60a244.words;
#if !CAPNP_LITE
static const uint16_t m_8366c4d3fe60a244[] = {1, 0};
static const uint16_t i_8366c4d3fe60a244[] = {0, 1};
const ::capnp::_::RawSchema s_8366c4d3fe60a244 = {
  0x8366c4d3fe60a244, b_8366c4d3fe60a244.words, 48, nullptr, m_8366c4d3fe60a244,
  0, 2, i_8366c4d3fe60a244, nullptr, nullptr, { &s_8366c4d3fe60a244, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_cbad615e85e24557 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     87,  69, 226, 133,  94,  97, 173, 203,
     12,   0,   0,   0,   1,   0,   1,   0,
      4,  36, 235, 245, 210,   1, 179, 128,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107,  46,  99,  97,
    112, 110, 112,  58,  66, 108, 111,  99,
    107,  82, 101, 113, 117, 101, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99,  97, 114, 100,  73, 100,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cbad615e85e24557 = b_cbad615e85e24557.words;
#if !CAPNP_LITE
static const uint16_t m_cbad615e85e24557[] = {0};
static const uint16_t i_cbad615e85e24557[] = {0};
const ::capnp::_::RawSchema s_cbad615e85e24557 = {
  0xcbad615e85e24557, b_cbad615e85e24557.words, 33, nullptr, m_cbad615e85e24557,
  0, 1, i_cbad615e85e24557, nullptr, nullptr, { &s_cbad615e85e24557, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_b5df659d2659c78e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    142, 199,  89,  38, 157, 101, 223, 181,
     12,   0,   0,   0,   1,   0,   0,   0,
      4,  36, 235, 245, 210,   1, 179, 128,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107,  46,  99,  97,
    112, 110, 112,  58,  66, 108, 111,  99,
    107,  82, 101, 115, 112, 111, 110, 115,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     98, 108, 111,  99, 107,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     68, 162,  96, 254, 211, 196, 102, 131,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b5df659d2659c78e = b_b5df659d2659c78e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b5df659d2659c78e[] = {
  &s_8366c4d3fe60a244,
};
static const uint16_t m_b5df659d2659c78e[] = {0};
static const uint16_t i_b5df659d2659c78e[] = {0};
const ::capnp::_::RawSchema s_b5df659d2659c78e = {
  0xb5df659d2659c78e, b_b5df659d2659c78e.words, 33, d_b5df659d2659c78e, m_b5df659d2659c78e,
  1, 1, i_b5df659d2659c78e, nullptr, nullptr, { &s_b5df659d2659c78e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Block
constexpr uint16_t Block::_capnpPrivate::dataWordSize;
constexpr uint16_t Block::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Block::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Block::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Block::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// BlockRequest
constexpr uint16_t BlockRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t BlockRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BlockRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BlockRequest::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* BlockRequest::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// BlockResponse
constexpr uint16_t BlockResponse::_capnpPrivate::dataWordSize;
constexpr uint16_t BlockResponse::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BlockResponse::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BlockResponse::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* BlockResponse::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



