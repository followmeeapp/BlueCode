// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: card_info.capnp

#include "card_info.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<49> b_c70ce843e57b388d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    141,  56, 123, 229,  67, 232,  12, 199,
     16,   0,   0,   0,   1,   0,   2,   0,
    217, 154, 163,  14,  58, 242,  69, 140,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 114, 100,  95, 105, 110, 102,
    111,  46,  99,  97, 112, 110, 112,  58,
     67,  97, 114, 100,  73, 110, 102, 111,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c70ce843e57b388d = b_c70ce843e57b388d.words;
#if !CAPNP_LITE
static const uint16_t m_c70ce843e57b388d[] = {0, 1};
static const uint16_t i_c70ce843e57b388d[] = {0, 1};
const ::capnp::_::RawSchema s_c70ce843e57b388d = {
  0xc70ce843e57b388d, b_c70ce843e57b388d.words, 49, nullptr, m_c70ce843e57b388d,
  0, 2, i_c70ce843e57b388d, nullptr, nullptr, { &s_c70ce843e57b388d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// CardInfo
constexpr uint16_t CardInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t CardInfo::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind CardInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CardInfo::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* CardInfo::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



