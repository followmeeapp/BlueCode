// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: section_info.capnp

#include "section_info.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<26> b_9b59453d5c0cc1cb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    203, 193,  12,  92,  61,  69,  89, 155,
     19,   0,   0,   0,   1,   0,   1,   0,
     14, 207,  89, 104, 155,  36,   2, 184,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101,  99, 116, 105, 111, 110,  95,
    105, 110, 102, 111,  46,  99,  97, 112,
    110, 112,  58,  83, 101,  99, 116, 105,
    111, 110,  73, 110, 102, 111,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     50,  83, 184, 255,  93,   8, 245, 251,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 105, 110, 100,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9b59453d5c0cc1cb = b_9b59453d5c0cc1cb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9b59453d5c0cc1cb[] = {
  &s_fbf5085dffb85332,
};
static const uint16_t m_9b59453d5c0cc1cb[] = {0};
static const uint16_t i_9b59453d5c0cc1cb[] = {0};
const ::capnp::_::RawSchema s_9b59453d5c0cc1cb = {
  0x9b59453d5c0cc1cb, b_9b59453d5c0cc1cb.words, 26, d_9b59453d5c0cc1cb, m_9b59453d5c0cc1cb,
  1, 1, i_9b59453d5c0cc1cb, nullptr, nullptr, { &s_9b59453d5c0cc1cb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_fbf5085dffb85332 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     50,  83, 184, 255,  93,   8, 245, 251,
     31,   0,   0,   0,   1,   0,   1,   0,
    203, 193,  12,  92,  61,  69,  89, 155,
      1,   0,   7,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101,  99, 116, 105, 111, 110,  95,
    105, 110, 102, 111,  46,  99,  97, 112,
    110, 112,  58,  83, 101,  99, 116, 105,
    111, 110,  73, 110, 102, 111,  46, 107,
    105, 110, 100,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    117, 110, 107, 110, 111, 119, 110,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,  83, 101,  99, 116, 105, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     54,  77,  43,  31, 115, 247, 131, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fbf5085dffb85332 = b_fbf5085dffb85332.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fbf5085dffb85332[] = {
  &s_9b59453d5c0cc1cb,
  &s_ca83f7731f2b4d36,
};
static const uint16_t m_fbf5085dffb85332[] = {1, 0};
static const uint16_t i_fbf5085dffb85332[] = {0, 1};
const ::capnp::_::RawSchema s_fbf5085dffb85332 = {
  0xfbf5085dffb85332, b_fbf5085dffb85332.words, 50, d_fbf5085dffb85332, m_fbf5085dffb85332,
  2, 2, i_fbf5085dffb85332, nullptr, nullptr, { &s_fbf5085dffb85332, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_ca83f7731f2b4d36 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     54,  77,  43,  31, 115, 247, 131, 202,
     19,   0,   0,   0,   1,   0,   2,   0,
     14, 207,  89, 104, 155,  36,   2, 184,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101,  99, 116, 105, 111, 110,  95,
    105, 110, 102, 111,  46,  99,  97, 112,
    110, 112,  58,  84, 105, 109, 101, 115,
    116,  97, 109, 112,  83, 101,  99, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 115, 116,  67,  97, 114, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ca83f7731f2b4d36 = b_ca83f7731f2b4d36.words;
#if !CAPNP_LITE
static const uint16_t m_ca83f7731f2b4d36[] = {1, 0};
static const uint16_t i_ca83f7731f2b4d36[] = {0, 1};
const ::capnp::_::RawSchema s_ca83f7731f2b4d36 = {
  0xca83f7731f2b4d36, b_ca83f7731f2b4d36.words, 51, nullptr, m_ca83f7731f2b4d36,
  0, 2, i_ca83f7731f2b4d36, nullptr, nullptr, { &s_ca83f7731f2b4d36, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// SectionInfo
constexpr uint16_t SectionInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t SectionInfo::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SectionInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SectionInfo::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SectionInfo::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SectionInfo::Kind
constexpr uint16_t SectionInfo::Kind::_capnpPrivate::dataWordSize;
constexpr uint16_t SectionInfo::Kind::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SectionInfo::Kind::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SectionInfo::Kind::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SectionInfo::Kind::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// TimestampSection
constexpr uint16_t TimestampSection::_capnpPrivate::dataWordSize;
constexpr uint16_t TimestampSection::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TimestampSection::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TimestampSection::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* TimestampSection::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



