// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: request.capnp

#ifndef CAPNP_INCLUDED_f8a7792a54809d33_
#define CAPNP_INCLUDED_f8a7792a54809d33_

#include "capnproto/capnp/generated-header-support.h"

#if CAPNP_VERSION != 6000
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include "backup.capnp.h"
#include "block.capnp.h"
#include "card.capnp.h"
#include "client_sync.capnp.h"
#include "discovery.capnp.h"
#include "hello.capnp.h"
#include "join.capnp.h"
#include "remove.capnp.h"
#include "section.capnp.h"
#include "set_device.capnp.h"

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(df859f6b1ad5eae7);
CAPNP_DECLARE_SCHEMA(c3ee1e16897ad87d);

}  // namespace schemas
}  // namespace capnp


struct Request {
  Request() = delete;

  class Reader;
  class Builder;
  class Pipeline;
  struct Kind;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(df859f6b1ad5eae7, 2, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand = &schema->defaultBrand;
    #endif  // !CAPNP_LITE
  };
};

struct Request::Kind {
  Kind() = delete;

  class Reader;
  class Builder;
  class Pipeline;
  enum Which: uint16_t {
    UNKNOWN,
    HELLO_REQUEST,
    CARD_REQUEST,
    DISCOVERY_REQUEST,
    JOIN_REQUEST,
    SET_DEVICE_REQUEST,
    CREATE_CARD_REQUEST,
    UPDATE_CARD_REQUEST,
    BLOCK_REQUEST,
    REMOVE_REQUEST,
    CLIENT_SYNC_REQUEST,
    CREATE_SECTION_REQUEST,
    CREATE_BACKUP_REQUEST,
    BACKUP_LIST_REQUEST,
    BACKUP_REQUEST,
  };

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(c3ee1e16897ad87d, 2, 1)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand = &schema->defaultBrand;
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class Request::Reader {
public:
  typedef Request Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand);
  }
#endif  // !CAPNP_LITE

  inline  ::int64_t getId() const;

  inline typename Kind::Reader getKind() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Request::Builder {
public:
  typedef Request Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::int64_t getId();
  inline void setId( ::int64_t value);

  inline typename Kind::Builder getKind();
  inline typename Kind::Builder initKind();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Request::Pipeline {
public:
  typedef Request Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline typename Kind::Pipeline getKind();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class Request::Kind::Reader {
public:
  typedef Kind Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand);
  }
#endif  // !CAPNP_LITE

  inline Which which() const;
  inline bool isUnknown() const;
  inline  ::capnp::Void getUnknown() const;

  inline bool isHelloRequest() const;
  inline bool hasHelloRequest() const;
  inline  ::HelloRequest::Reader getHelloRequest() const;

  inline bool isCardRequest() const;
  inline bool hasCardRequest() const;
  inline  ::CardRequest::Reader getCardRequest() const;

  inline bool isDiscoveryRequest() const;
  inline bool hasDiscoveryRequest() const;
  inline  ::DiscoveryRequest::Reader getDiscoveryRequest() const;

  inline bool isJoinRequest() const;
  inline bool hasJoinRequest() const;
  inline  ::JoinRequest::Reader getJoinRequest() const;

  inline bool isSetDeviceRequest() const;
  inline bool hasSetDeviceRequest() const;
  inline  ::SetDeviceRequest::Reader getSetDeviceRequest() const;

  inline bool isCreateCardRequest() const;
  inline bool hasCreateCardRequest() const;
  inline  ::CreateCardRequest::Reader getCreateCardRequest() const;

  inline bool isUpdateCardRequest() const;
  inline bool hasUpdateCardRequest() const;
  inline  ::UpdateCardRequest::Reader getUpdateCardRequest() const;

  inline bool isBlockRequest() const;
  inline bool hasBlockRequest() const;
  inline  ::BlockRequest::Reader getBlockRequest() const;

  inline bool isRemoveRequest() const;
  inline bool hasRemoveRequest() const;
  inline  ::RemoveRequest::Reader getRemoveRequest() const;

  inline bool isClientSyncRequest() const;
  inline bool hasClientSyncRequest() const;
  inline  ::ClientSyncRequest::Reader getClientSyncRequest() const;

  inline bool isCreateSectionRequest() const;
  inline bool hasCreateSectionRequest() const;
  inline  ::CreateSectionRequest::Reader getCreateSectionRequest() const;

  inline bool isCreateBackupRequest() const;
  inline bool hasCreateBackupRequest() const;
  inline  ::CreateBackupRequest::Reader getCreateBackupRequest() const;

  inline bool isBackupListRequest() const;
  inline bool hasBackupListRequest() const;
  inline  ::BackupListRequest::Reader getBackupListRequest() const;

  inline bool isBackupRequest() const;
  inline bool hasBackupRequest() const;
  inline  ::BackupRequest::Reader getBackupRequest() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Request::Kind::Builder {
public:
  typedef Kind Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline Which which();
  inline bool isUnknown();
  inline  ::capnp::Void getUnknown();
  inline void setUnknown( ::capnp::Void value = ::capnp::VOID);

  inline bool isHelloRequest();
  inline bool hasHelloRequest();
  inline  ::HelloRequest::Builder getHelloRequest();
  inline void setHelloRequest( ::HelloRequest::Reader value);
  inline  ::HelloRequest::Builder initHelloRequest();
  inline void adoptHelloRequest(::capnp::Orphan< ::HelloRequest>&& value);
  inline ::capnp::Orphan< ::HelloRequest> disownHelloRequest();

  inline bool isCardRequest();
  inline bool hasCardRequest();
  inline  ::CardRequest::Builder getCardRequest();
  inline void setCardRequest( ::CardRequest::Reader value);
  inline  ::CardRequest::Builder initCardRequest();
  inline void adoptCardRequest(::capnp::Orphan< ::CardRequest>&& value);
  inline ::capnp::Orphan< ::CardRequest> disownCardRequest();

  inline bool isDiscoveryRequest();
  inline bool hasDiscoveryRequest();
  inline  ::DiscoveryRequest::Builder getDiscoveryRequest();
  inline void setDiscoveryRequest( ::DiscoveryRequest::Reader value);
  inline  ::DiscoveryRequest::Builder initDiscoveryRequest();
  inline void adoptDiscoveryRequest(::capnp::Orphan< ::DiscoveryRequest>&& value);
  inline ::capnp::Orphan< ::DiscoveryRequest> disownDiscoveryRequest();

  inline bool isJoinRequest();
  inline bool hasJoinRequest();
  inline  ::JoinRequest::Builder getJoinRequest();
  inline void setJoinRequest( ::JoinRequest::Reader value);
  inline  ::JoinRequest::Builder initJoinRequest();
  inline void adoptJoinRequest(::capnp::Orphan< ::JoinRequest>&& value);
  inline ::capnp::Orphan< ::JoinRequest> disownJoinRequest();

  inline bool isSetDeviceRequest();
  inline bool hasSetDeviceRequest();
  inline  ::SetDeviceRequest::Builder getSetDeviceRequest();
  inline void setSetDeviceRequest( ::SetDeviceRequest::Reader value);
  inline  ::SetDeviceRequest::Builder initSetDeviceRequest();
  inline void adoptSetDeviceRequest(::capnp::Orphan< ::SetDeviceRequest>&& value);
  inline ::capnp::Orphan< ::SetDeviceRequest> disownSetDeviceRequest();

  inline bool isCreateCardRequest();
  inline bool hasCreateCardRequest();
  inline  ::CreateCardRequest::Builder getCreateCardRequest();
  inline void setCreateCardRequest( ::CreateCardRequest::Reader value);
  inline  ::CreateCardRequest::Builder initCreateCardRequest();
  inline void adoptCreateCardRequest(::capnp::Orphan< ::CreateCardRequest>&& value);
  inline ::capnp::Orphan< ::CreateCardRequest> disownCreateCardRequest();

  inline bool isUpdateCardRequest();
  inline bool hasUpdateCardRequest();
  inline  ::UpdateCardRequest::Builder getUpdateCardRequest();
  inline void setUpdateCardRequest( ::UpdateCardRequest::Reader value);
  inline  ::UpdateCardRequest::Builder initUpdateCardRequest();
  inline void adoptUpdateCardRequest(::capnp::Orphan< ::UpdateCardRequest>&& value);
  inline ::capnp::Orphan< ::UpdateCardRequest> disownUpdateCardRequest();

  inline bool isBlockRequest();
  inline bool hasBlockRequest();
  inline  ::BlockRequest::Builder getBlockRequest();
  inline void setBlockRequest( ::BlockRequest::Reader value);
  inline  ::BlockRequest::Builder initBlockRequest();
  inline void adoptBlockRequest(::capnp::Orphan< ::BlockRequest>&& value);
  inline ::capnp::Orphan< ::BlockRequest> disownBlockRequest();

  inline bool isRemoveRequest();
  inline bool hasRemoveRequest();
  inline  ::RemoveRequest::Builder getRemoveRequest();
  inline void setRemoveRequest( ::RemoveRequest::Reader value);
  inline  ::RemoveRequest::Builder initRemoveRequest();
  inline void adoptRemoveRequest(::capnp::Orphan< ::RemoveRequest>&& value);
  inline ::capnp::Orphan< ::RemoveRequest> disownRemoveRequest();

  inline bool isClientSyncRequest();
  inline bool hasClientSyncRequest();
  inline  ::ClientSyncRequest::Builder getClientSyncRequest();
  inline void setClientSyncRequest( ::ClientSyncRequest::Reader value);
  inline  ::ClientSyncRequest::Builder initClientSyncRequest();
  inline void adoptClientSyncRequest(::capnp::Orphan< ::ClientSyncRequest>&& value);
  inline ::capnp::Orphan< ::ClientSyncRequest> disownClientSyncRequest();

  inline bool isCreateSectionRequest();
  inline bool hasCreateSectionRequest();
  inline  ::CreateSectionRequest::Builder getCreateSectionRequest();
  inline void setCreateSectionRequest( ::CreateSectionRequest::Reader value);
  inline  ::CreateSectionRequest::Builder initCreateSectionRequest();
  inline void adoptCreateSectionRequest(::capnp::Orphan< ::CreateSectionRequest>&& value);
  inline ::capnp::Orphan< ::CreateSectionRequest> disownCreateSectionRequest();

  inline bool isCreateBackupRequest();
  inline bool hasCreateBackupRequest();
  inline  ::CreateBackupRequest::Builder getCreateBackupRequest();
  inline void setCreateBackupRequest( ::CreateBackupRequest::Reader value);
  inline  ::CreateBackupRequest::Builder initCreateBackupRequest();
  inline void adoptCreateBackupRequest(::capnp::Orphan< ::CreateBackupRequest>&& value);
  inline ::capnp::Orphan< ::CreateBackupRequest> disownCreateBackupRequest();

  inline bool isBackupListRequest();
  inline bool hasBackupListRequest();
  inline  ::BackupListRequest::Builder getBackupListRequest();
  inline void setBackupListRequest( ::BackupListRequest::Reader value);
  inline  ::BackupListRequest::Builder initBackupListRequest();
  inline void adoptBackupListRequest(::capnp::Orphan< ::BackupListRequest>&& value);
  inline ::capnp::Orphan< ::BackupListRequest> disownBackupListRequest();

  inline bool isBackupRequest();
  inline bool hasBackupRequest();
  inline  ::BackupRequest::Builder getBackupRequest();
  inline void setBackupRequest( ::BackupRequest::Reader value);
  inline  ::BackupRequest::Builder initBackupRequest();
  inline void adoptBackupRequest(::capnp::Orphan< ::BackupRequest>&& value);
  inline ::capnp::Orphan< ::BackupRequest> disownBackupRequest();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Request::Kind::Pipeline {
public:
  typedef Kind Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline  ::int64_t Request::Reader::getId() const {
  return _reader.getDataField< ::int64_t>(
      0 * ::capnp::ELEMENTS);
}

inline  ::int64_t Request::Builder::getId() {
  return _builder.getDataField< ::int64_t>(
      0 * ::capnp::ELEMENTS);
}
inline void Request::Builder::setId( ::int64_t value) {
  _builder.setDataField< ::int64_t>(
      0 * ::capnp::ELEMENTS, value);
}

inline typename Request::Kind::Reader Request::Reader::getKind() const {
  return Request::Kind::Reader(_reader);
}
inline typename Request::Kind::Builder Request::Builder::getKind() {
  return Request::Kind::Builder(_builder);
}
#if !CAPNP_LITE
inline typename Request::Kind::Pipeline Request::Pipeline::getKind() {
  return Request::Kind::Pipeline(_typeless.noop());
}
#endif  // !CAPNP_LITE
inline typename Request::Kind::Builder Request::Builder::initKind() {
  _builder.setDataField< ::uint16_t>(4 * ::capnp::ELEMENTS, 0);
  _builder.getPointerField(0 * ::capnp::POINTERS).clear();
  return Request::Kind::Builder(_builder);
}
inline  ::Request::Kind::Which Request::Kind::Reader::which() const {
  return _reader.getDataField<Which>(4 * ::capnp::ELEMENTS);
}
inline  ::Request::Kind::Which Request::Kind::Builder::which() {
  return _builder.getDataField<Which>(4 * ::capnp::ELEMENTS);
}

inline bool Request::Kind::Reader::isUnknown() const {
  return which() == Request::Kind::UNKNOWN;
}
inline bool Request::Kind::Builder::isUnknown() {
  return which() == Request::Kind::UNKNOWN;
}
inline  ::capnp::Void Request::Kind::Reader::getUnknown() const {
  KJ_IREQUIRE((which() == Request::Kind::UNKNOWN),
              "Must check which() before get()ing a union member.");
  return _reader.getDataField< ::capnp::Void>(
      0 * ::capnp::ELEMENTS);
}

inline  ::capnp::Void Request::Kind::Builder::getUnknown() {
  KJ_IREQUIRE((which() == Request::Kind::UNKNOWN),
              "Must check which() before get()ing a union member.");
  return _builder.getDataField< ::capnp::Void>(
      0 * ::capnp::ELEMENTS);
}
inline void Request::Kind::Builder::setUnknown( ::capnp::Void value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::UNKNOWN);
  _builder.setDataField< ::capnp::Void>(
      0 * ::capnp::ELEMENTS, value);
}

inline bool Request::Kind::Reader::isHelloRequest() const {
  return which() == Request::Kind::HELLO_REQUEST;
}
inline bool Request::Kind::Builder::isHelloRequest() {
  return which() == Request::Kind::HELLO_REQUEST;
}
inline bool Request::Kind::Reader::hasHelloRequest() const {
  if (which() != Request::Kind::HELLO_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasHelloRequest() {
  if (which() != Request::Kind::HELLO_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::HelloRequest::Reader Request::Kind::Reader::getHelloRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::HELLO_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::HelloRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::HelloRequest::Builder Request::Kind::Builder::getHelloRequest() {
  KJ_IREQUIRE((which() == Request::Kind::HELLO_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::HelloRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setHelloRequest( ::HelloRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::HELLO_REQUEST);
  ::capnp::_::PointerHelpers< ::HelloRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::HelloRequest::Builder Request::Kind::Builder::initHelloRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::HELLO_REQUEST);
  return ::capnp::_::PointerHelpers< ::HelloRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptHelloRequest(
    ::capnp::Orphan< ::HelloRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::HELLO_REQUEST);
  ::capnp::_::PointerHelpers< ::HelloRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::HelloRequest> Request::Kind::Builder::disownHelloRequest() {
  KJ_IREQUIRE((which() == Request::Kind::HELLO_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::HelloRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isCardRequest() const {
  return which() == Request::Kind::CARD_REQUEST;
}
inline bool Request::Kind::Builder::isCardRequest() {
  return which() == Request::Kind::CARD_REQUEST;
}
inline bool Request::Kind::Reader::hasCardRequest() const {
  if (which() != Request::Kind::CARD_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasCardRequest() {
  if (which() != Request::Kind::CARD_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::CardRequest::Reader Request::Kind::Reader::getCardRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::CARD_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::CardRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::CardRequest::Builder Request::Kind::Builder::getCardRequest() {
  KJ_IREQUIRE((which() == Request::Kind::CARD_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::CardRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setCardRequest( ::CardRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CARD_REQUEST);
  ::capnp::_::PointerHelpers< ::CardRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::CardRequest::Builder Request::Kind::Builder::initCardRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CARD_REQUEST);
  return ::capnp::_::PointerHelpers< ::CardRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptCardRequest(
    ::capnp::Orphan< ::CardRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CARD_REQUEST);
  ::capnp::_::PointerHelpers< ::CardRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::CardRequest> Request::Kind::Builder::disownCardRequest() {
  KJ_IREQUIRE((which() == Request::Kind::CARD_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::CardRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isDiscoveryRequest() const {
  return which() == Request::Kind::DISCOVERY_REQUEST;
}
inline bool Request::Kind::Builder::isDiscoveryRequest() {
  return which() == Request::Kind::DISCOVERY_REQUEST;
}
inline bool Request::Kind::Reader::hasDiscoveryRequest() const {
  if (which() != Request::Kind::DISCOVERY_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasDiscoveryRequest() {
  if (which() != Request::Kind::DISCOVERY_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::DiscoveryRequest::Reader Request::Kind::Reader::getDiscoveryRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::DISCOVERY_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::DiscoveryRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::DiscoveryRequest::Builder Request::Kind::Builder::getDiscoveryRequest() {
  KJ_IREQUIRE((which() == Request::Kind::DISCOVERY_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::DiscoveryRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setDiscoveryRequest( ::DiscoveryRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::DISCOVERY_REQUEST);
  ::capnp::_::PointerHelpers< ::DiscoveryRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::DiscoveryRequest::Builder Request::Kind::Builder::initDiscoveryRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::DISCOVERY_REQUEST);
  return ::capnp::_::PointerHelpers< ::DiscoveryRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptDiscoveryRequest(
    ::capnp::Orphan< ::DiscoveryRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::DISCOVERY_REQUEST);
  ::capnp::_::PointerHelpers< ::DiscoveryRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::DiscoveryRequest> Request::Kind::Builder::disownDiscoveryRequest() {
  KJ_IREQUIRE((which() == Request::Kind::DISCOVERY_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::DiscoveryRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isJoinRequest() const {
  return which() == Request::Kind::JOIN_REQUEST;
}
inline bool Request::Kind::Builder::isJoinRequest() {
  return which() == Request::Kind::JOIN_REQUEST;
}
inline bool Request::Kind::Reader::hasJoinRequest() const {
  if (which() != Request::Kind::JOIN_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasJoinRequest() {
  if (which() != Request::Kind::JOIN_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::JoinRequest::Reader Request::Kind::Reader::getJoinRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::JOIN_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::JoinRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::JoinRequest::Builder Request::Kind::Builder::getJoinRequest() {
  KJ_IREQUIRE((which() == Request::Kind::JOIN_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::JoinRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setJoinRequest( ::JoinRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::JOIN_REQUEST);
  ::capnp::_::PointerHelpers< ::JoinRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::JoinRequest::Builder Request::Kind::Builder::initJoinRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::JOIN_REQUEST);
  return ::capnp::_::PointerHelpers< ::JoinRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptJoinRequest(
    ::capnp::Orphan< ::JoinRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::JOIN_REQUEST);
  ::capnp::_::PointerHelpers< ::JoinRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::JoinRequest> Request::Kind::Builder::disownJoinRequest() {
  KJ_IREQUIRE((which() == Request::Kind::JOIN_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::JoinRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isSetDeviceRequest() const {
  return which() == Request::Kind::SET_DEVICE_REQUEST;
}
inline bool Request::Kind::Builder::isSetDeviceRequest() {
  return which() == Request::Kind::SET_DEVICE_REQUEST;
}
inline bool Request::Kind::Reader::hasSetDeviceRequest() const {
  if (which() != Request::Kind::SET_DEVICE_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasSetDeviceRequest() {
  if (which() != Request::Kind::SET_DEVICE_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::SetDeviceRequest::Reader Request::Kind::Reader::getSetDeviceRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::SET_DEVICE_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::SetDeviceRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::SetDeviceRequest::Builder Request::Kind::Builder::getSetDeviceRequest() {
  KJ_IREQUIRE((which() == Request::Kind::SET_DEVICE_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::SetDeviceRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setSetDeviceRequest( ::SetDeviceRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::SET_DEVICE_REQUEST);
  ::capnp::_::PointerHelpers< ::SetDeviceRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::SetDeviceRequest::Builder Request::Kind::Builder::initSetDeviceRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::SET_DEVICE_REQUEST);
  return ::capnp::_::PointerHelpers< ::SetDeviceRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptSetDeviceRequest(
    ::capnp::Orphan< ::SetDeviceRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::SET_DEVICE_REQUEST);
  ::capnp::_::PointerHelpers< ::SetDeviceRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::SetDeviceRequest> Request::Kind::Builder::disownSetDeviceRequest() {
  KJ_IREQUIRE((which() == Request::Kind::SET_DEVICE_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::SetDeviceRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isCreateCardRequest() const {
  return which() == Request::Kind::CREATE_CARD_REQUEST;
}
inline bool Request::Kind::Builder::isCreateCardRequest() {
  return which() == Request::Kind::CREATE_CARD_REQUEST;
}
inline bool Request::Kind::Reader::hasCreateCardRequest() const {
  if (which() != Request::Kind::CREATE_CARD_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasCreateCardRequest() {
  if (which() != Request::Kind::CREATE_CARD_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::CreateCardRequest::Reader Request::Kind::Reader::getCreateCardRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::CREATE_CARD_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::CreateCardRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::CreateCardRequest::Builder Request::Kind::Builder::getCreateCardRequest() {
  KJ_IREQUIRE((which() == Request::Kind::CREATE_CARD_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::CreateCardRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setCreateCardRequest( ::CreateCardRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CREATE_CARD_REQUEST);
  ::capnp::_::PointerHelpers< ::CreateCardRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::CreateCardRequest::Builder Request::Kind::Builder::initCreateCardRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CREATE_CARD_REQUEST);
  return ::capnp::_::PointerHelpers< ::CreateCardRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptCreateCardRequest(
    ::capnp::Orphan< ::CreateCardRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CREATE_CARD_REQUEST);
  ::capnp::_::PointerHelpers< ::CreateCardRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::CreateCardRequest> Request::Kind::Builder::disownCreateCardRequest() {
  KJ_IREQUIRE((which() == Request::Kind::CREATE_CARD_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::CreateCardRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isUpdateCardRequest() const {
  return which() == Request::Kind::UPDATE_CARD_REQUEST;
}
inline bool Request::Kind::Builder::isUpdateCardRequest() {
  return which() == Request::Kind::UPDATE_CARD_REQUEST;
}
inline bool Request::Kind::Reader::hasUpdateCardRequest() const {
  if (which() != Request::Kind::UPDATE_CARD_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasUpdateCardRequest() {
  if (which() != Request::Kind::UPDATE_CARD_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::UpdateCardRequest::Reader Request::Kind::Reader::getUpdateCardRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::UPDATE_CARD_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::UpdateCardRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::UpdateCardRequest::Builder Request::Kind::Builder::getUpdateCardRequest() {
  KJ_IREQUIRE((which() == Request::Kind::UPDATE_CARD_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::UpdateCardRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setUpdateCardRequest( ::UpdateCardRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::UPDATE_CARD_REQUEST);
  ::capnp::_::PointerHelpers< ::UpdateCardRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::UpdateCardRequest::Builder Request::Kind::Builder::initUpdateCardRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::UPDATE_CARD_REQUEST);
  return ::capnp::_::PointerHelpers< ::UpdateCardRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptUpdateCardRequest(
    ::capnp::Orphan< ::UpdateCardRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::UPDATE_CARD_REQUEST);
  ::capnp::_::PointerHelpers< ::UpdateCardRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::UpdateCardRequest> Request::Kind::Builder::disownUpdateCardRequest() {
  KJ_IREQUIRE((which() == Request::Kind::UPDATE_CARD_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::UpdateCardRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isBlockRequest() const {
  return which() == Request::Kind::BLOCK_REQUEST;
}
inline bool Request::Kind::Builder::isBlockRequest() {
  return which() == Request::Kind::BLOCK_REQUEST;
}
inline bool Request::Kind::Reader::hasBlockRequest() const {
  if (which() != Request::Kind::BLOCK_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasBlockRequest() {
  if (which() != Request::Kind::BLOCK_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::BlockRequest::Reader Request::Kind::Reader::getBlockRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::BLOCK_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::BlockRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::BlockRequest::Builder Request::Kind::Builder::getBlockRequest() {
  KJ_IREQUIRE((which() == Request::Kind::BLOCK_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::BlockRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setBlockRequest( ::BlockRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::BLOCK_REQUEST);
  ::capnp::_::PointerHelpers< ::BlockRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::BlockRequest::Builder Request::Kind::Builder::initBlockRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::BLOCK_REQUEST);
  return ::capnp::_::PointerHelpers< ::BlockRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptBlockRequest(
    ::capnp::Orphan< ::BlockRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::BLOCK_REQUEST);
  ::capnp::_::PointerHelpers< ::BlockRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::BlockRequest> Request::Kind::Builder::disownBlockRequest() {
  KJ_IREQUIRE((which() == Request::Kind::BLOCK_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::BlockRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isRemoveRequest() const {
  return which() == Request::Kind::REMOVE_REQUEST;
}
inline bool Request::Kind::Builder::isRemoveRequest() {
  return which() == Request::Kind::REMOVE_REQUEST;
}
inline bool Request::Kind::Reader::hasRemoveRequest() const {
  if (which() != Request::Kind::REMOVE_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasRemoveRequest() {
  if (which() != Request::Kind::REMOVE_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::RemoveRequest::Reader Request::Kind::Reader::getRemoveRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::REMOVE_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::RemoveRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::RemoveRequest::Builder Request::Kind::Builder::getRemoveRequest() {
  KJ_IREQUIRE((which() == Request::Kind::REMOVE_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::RemoveRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setRemoveRequest( ::RemoveRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::REMOVE_REQUEST);
  ::capnp::_::PointerHelpers< ::RemoveRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::RemoveRequest::Builder Request::Kind::Builder::initRemoveRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::REMOVE_REQUEST);
  return ::capnp::_::PointerHelpers< ::RemoveRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptRemoveRequest(
    ::capnp::Orphan< ::RemoveRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::REMOVE_REQUEST);
  ::capnp::_::PointerHelpers< ::RemoveRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::RemoveRequest> Request::Kind::Builder::disownRemoveRequest() {
  KJ_IREQUIRE((which() == Request::Kind::REMOVE_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::RemoveRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isClientSyncRequest() const {
  return which() == Request::Kind::CLIENT_SYNC_REQUEST;
}
inline bool Request::Kind::Builder::isClientSyncRequest() {
  return which() == Request::Kind::CLIENT_SYNC_REQUEST;
}
inline bool Request::Kind::Reader::hasClientSyncRequest() const {
  if (which() != Request::Kind::CLIENT_SYNC_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasClientSyncRequest() {
  if (which() != Request::Kind::CLIENT_SYNC_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::ClientSyncRequest::Reader Request::Kind::Reader::getClientSyncRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::CLIENT_SYNC_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::ClientSyncRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::ClientSyncRequest::Builder Request::Kind::Builder::getClientSyncRequest() {
  KJ_IREQUIRE((which() == Request::Kind::CLIENT_SYNC_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::ClientSyncRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setClientSyncRequest( ::ClientSyncRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CLIENT_SYNC_REQUEST);
  ::capnp::_::PointerHelpers< ::ClientSyncRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::ClientSyncRequest::Builder Request::Kind::Builder::initClientSyncRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CLIENT_SYNC_REQUEST);
  return ::capnp::_::PointerHelpers< ::ClientSyncRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptClientSyncRequest(
    ::capnp::Orphan< ::ClientSyncRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CLIENT_SYNC_REQUEST);
  ::capnp::_::PointerHelpers< ::ClientSyncRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::ClientSyncRequest> Request::Kind::Builder::disownClientSyncRequest() {
  KJ_IREQUIRE((which() == Request::Kind::CLIENT_SYNC_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::ClientSyncRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isCreateSectionRequest() const {
  return which() == Request::Kind::CREATE_SECTION_REQUEST;
}
inline bool Request::Kind::Builder::isCreateSectionRequest() {
  return which() == Request::Kind::CREATE_SECTION_REQUEST;
}
inline bool Request::Kind::Reader::hasCreateSectionRequest() const {
  if (which() != Request::Kind::CREATE_SECTION_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasCreateSectionRequest() {
  if (which() != Request::Kind::CREATE_SECTION_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::CreateSectionRequest::Reader Request::Kind::Reader::getCreateSectionRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::CREATE_SECTION_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::CreateSectionRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::CreateSectionRequest::Builder Request::Kind::Builder::getCreateSectionRequest() {
  KJ_IREQUIRE((which() == Request::Kind::CREATE_SECTION_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::CreateSectionRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setCreateSectionRequest( ::CreateSectionRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CREATE_SECTION_REQUEST);
  ::capnp::_::PointerHelpers< ::CreateSectionRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::CreateSectionRequest::Builder Request::Kind::Builder::initCreateSectionRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CREATE_SECTION_REQUEST);
  return ::capnp::_::PointerHelpers< ::CreateSectionRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptCreateSectionRequest(
    ::capnp::Orphan< ::CreateSectionRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CREATE_SECTION_REQUEST);
  ::capnp::_::PointerHelpers< ::CreateSectionRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::CreateSectionRequest> Request::Kind::Builder::disownCreateSectionRequest() {
  KJ_IREQUIRE((which() == Request::Kind::CREATE_SECTION_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::CreateSectionRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isCreateBackupRequest() const {
  return which() == Request::Kind::CREATE_BACKUP_REQUEST;
}
inline bool Request::Kind::Builder::isCreateBackupRequest() {
  return which() == Request::Kind::CREATE_BACKUP_REQUEST;
}
inline bool Request::Kind::Reader::hasCreateBackupRequest() const {
  if (which() != Request::Kind::CREATE_BACKUP_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasCreateBackupRequest() {
  if (which() != Request::Kind::CREATE_BACKUP_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::CreateBackupRequest::Reader Request::Kind::Reader::getCreateBackupRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::CREATE_BACKUP_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::CreateBackupRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::CreateBackupRequest::Builder Request::Kind::Builder::getCreateBackupRequest() {
  KJ_IREQUIRE((which() == Request::Kind::CREATE_BACKUP_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::CreateBackupRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setCreateBackupRequest( ::CreateBackupRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CREATE_BACKUP_REQUEST);
  ::capnp::_::PointerHelpers< ::CreateBackupRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::CreateBackupRequest::Builder Request::Kind::Builder::initCreateBackupRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CREATE_BACKUP_REQUEST);
  return ::capnp::_::PointerHelpers< ::CreateBackupRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptCreateBackupRequest(
    ::capnp::Orphan< ::CreateBackupRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::CREATE_BACKUP_REQUEST);
  ::capnp::_::PointerHelpers< ::CreateBackupRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::CreateBackupRequest> Request::Kind::Builder::disownCreateBackupRequest() {
  KJ_IREQUIRE((which() == Request::Kind::CREATE_BACKUP_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::CreateBackupRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isBackupListRequest() const {
  return which() == Request::Kind::BACKUP_LIST_REQUEST;
}
inline bool Request::Kind::Builder::isBackupListRequest() {
  return which() == Request::Kind::BACKUP_LIST_REQUEST;
}
inline bool Request::Kind::Reader::hasBackupListRequest() const {
  if (which() != Request::Kind::BACKUP_LIST_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasBackupListRequest() {
  if (which() != Request::Kind::BACKUP_LIST_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::BackupListRequest::Reader Request::Kind::Reader::getBackupListRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::BACKUP_LIST_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::BackupListRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::BackupListRequest::Builder Request::Kind::Builder::getBackupListRequest() {
  KJ_IREQUIRE((which() == Request::Kind::BACKUP_LIST_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::BackupListRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setBackupListRequest( ::BackupListRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::BACKUP_LIST_REQUEST);
  ::capnp::_::PointerHelpers< ::BackupListRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::BackupListRequest::Builder Request::Kind::Builder::initBackupListRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::BACKUP_LIST_REQUEST);
  return ::capnp::_::PointerHelpers< ::BackupListRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptBackupListRequest(
    ::capnp::Orphan< ::BackupListRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::BACKUP_LIST_REQUEST);
  ::capnp::_::PointerHelpers< ::BackupListRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::BackupListRequest> Request::Kind::Builder::disownBackupListRequest() {
  KJ_IREQUIRE((which() == Request::Kind::BACKUP_LIST_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::BackupListRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}

inline bool Request::Kind::Reader::isBackupRequest() const {
  return which() == Request::Kind::BACKUP_REQUEST;
}
inline bool Request::Kind::Builder::isBackupRequest() {
  return which() == Request::Kind::BACKUP_REQUEST;
}
inline bool Request::Kind::Reader::hasBackupRequest() const {
  if (which() != Request::Kind::BACKUP_REQUEST) return false;
  return !_reader.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline bool Request::Kind::Builder::hasBackupRequest() {
  if (which() != Request::Kind::BACKUP_REQUEST) return false;
  return !_builder.getPointerField(0 * ::capnp::POINTERS).isNull();
}
inline  ::BackupRequest::Reader Request::Kind::Reader::getBackupRequest() const {
  KJ_IREQUIRE((which() == Request::Kind::BACKUP_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::BackupRequest>::get(
      _reader.getPointerField(0 * ::capnp::POINTERS));
}
inline  ::BackupRequest::Builder Request::Kind::Builder::getBackupRequest() {
  KJ_IREQUIRE((which() == Request::Kind::BACKUP_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::BackupRequest>::get(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::setBackupRequest( ::BackupRequest::Reader value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::BACKUP_REQUEST);
  ::capnp::_::PointerHelpers< ::BackupRequest>::set(
      _builder.getPointerField(0 * ::capnp::POINTERS), value);
}
inline  ::BackupRequest::Builder Request::Kind::Builder::initBackupRequest() {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::BACKUP_REQUEST);
  return ::capnp::_::PointerHelpers< ::BackupRequest>::init(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}
inline void Request::Kind::Builder::adoptBackupRequest(
    ::capnp::Orphan< ::BackupRequest>&& value) {
  _builder.setDataField<Request::Kind::Which>(
      4 * ::capnp::ELEMENTS, Request::Kind::BACKUP_REQUEST);
  ::capnp::_::PointerHelpers< ::BackupRequest>::adopt(
      _builder.getPointerField(0 * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::BackupRequest> Request::Kind::Builder::disownBackupRequest() {
  KJ_IREQUIRE((which() == Request::Kind::BACKUP_REQUEST),
              "Must check which() before get()ing a union member.");
  return ::capnp::_::PointerHelpers< ::BackupRequest>::disown(
      _builder.getPointerField(0 * ::capnp::POINTERS));
}


#endif  // CAPNP_INCLUDED_f8a7792a54809d33_
