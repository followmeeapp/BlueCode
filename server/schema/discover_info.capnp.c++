// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: discover_info.capnp

#include "discover_info.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<71> b_d0b90f05e30ebe19 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25, 190,  14, 227,   5,  15, 185, 208,
     20,   0,   0,   0,   1,   0,   2,   0,
    220,  47, 171, 199,  28, 120,  23, 250,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111, 118, 101, 114,
     95, 105, 110, 102, 111,  46,  99,  97,
    112, 110, 112,  58,  68, 105, 115,  99,
    111, 118, 101, 114,  73, 110, 102, 111,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    149, 104,  60, 189,  26,  64,  20, 193,
      1,   0,   0,   0,  42,   0,   0,   0,
     84, 121, 112, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,  80,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 242,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 113, 117, 101, 115, 116,  73,
    100,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    149, 104,  60, 189,  26,  64,  20, 193,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104, 111, 117, 108, 100,  83, 117,
    112, 112, 114, 101, 115, 115,  83, 101,
     99, 116, 105, 111, 110,  67, 114, 101,
     97, 116, 105, 111, 110,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d0b90f05e30ebe19 = b_d0b90f05e30ebe19.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d0b90f05e30ebe19[] = {
  &s_c114401abd3c6895,
};
static const uint16_t m_d0b90f05e30ebe19[] = {0, 2, 1};
static const uint16_t i_d0b90f05e30ebe19[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d0b90f05e30ebe19 = {
  0xd0b90f05e30ebe19, b_d0b90f05e30ebe19.words, 71, d_d0b90f05e30ebe19, m_d0b90f05e30ebe19,
  1, 3, i_d0b90f05e30ebe19, nullptr, nullptr, { &s_d0b90f05e30ebe19, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_c114401abd3c6895 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    149, 104,  60, 189,  26,  64,  20, 193,
     33,   0,   0,   0,   2,   0,   0,   0,
     25, 190,  14, 227,   5,  15, 185, 208,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99, 111, 118, 101, 114,
     95, 105, 110, 102, 111,  46,  99,  97,
    112, 110, 112,  58,  68, 105, 115,  99,
    111, 118, 101, 114,  73, 110, 102, 111,
     46,  84, 121, 112, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 107, 110, 111, 119, 110,   0,
    100, 105, 115,  99, 111, 118, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101,  97,  99, 116, 105, 118,  97,
    116, 101,  68, 101, 118, 105,  99, 101,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c114401abd3c6895 = b_c114401abd3c6895.words;
#if !CAPNP_LITE
static const uint16_t m_c114401abd3c6895[] = {2, 1, 0};
const ::capnp::_::RawSchema s_c114401abd3c6895 = {
  0xc114401abd3c6895, b_c114401abd3c6895.words, 34, nullptr, m_c114401abd3c6895,
  0, 3, nullptr, nullptr, nullptr, { &s_c114401abd3c6895, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Type_c114401abd3c6895, c114401abd3c6895);
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// DiscoverInfo
constexpr uint16_t DiscoverInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t DiscoverInfo::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DiscoverInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DiscoverInfo::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DiscoverInfo::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



